{"version":3,"sources":["actions/data-action.js","store/index.js","reducers/index.js","data/SumBalance.csv","data/Export_import_partner_year.csv","data/Percent.csv","serviceWorker.js","utils/history.js","components/RoutePublic.js","constants/country_geocode.js","components/Background.js","utils/number-utils.js","components/Map.js","components/PieChart.js","constants/country_code.js","components/SelectCountry.js","routes/Home.js","routes/DataList.js","components/StackedAreaChart.js","components/LineChart.js","routes/AreaChart.js","constants/colors.js","components/TreeMap.js","routes/TreeMap.js","routes/NotFound.js","routes/Splash.js","config.js","App.js","index.js","reducers/data-reducer.js","handlers/data-handler.js"],"names":["createActions","setSumBalanceData","setPartnerYearData","setPercentProductData","Types","Creators","reducer","persistReducer","key","storage","whitelist","root_reducer","initialState","store","createStore","persistor","persistStore","configStore","global","combineReducers","data_reducer","require","module","exports","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","history","createBrowserHistory","query","qs","parse","search","substr","listen","go","goBack","push","replace","RoutePublic","Component","component","isAuthenticated","to","rest","render","props","defaultProps","Content","Layout","Footer","Header","SubMenu","Menu","children","style","position","zIndex","width","background","padding","className","mode","Item","type","title","marginTop","minHeight","textAlign","numberWithCommas","x","toString","pattern","test","generatorId","Math","random","React","memo","map_data","markers","map","backgroundColor","zoomOnScroll","containerStyle","height","onRegionClick","e","country_code","handleRegionClick","setTimeout","Array","from","document","getElementsByClassName","forEach","el","display","containerClassName","markerStyle","initial","fill","stroke","regionStyle","hover","cursor","series","regions","values","scale","normalizeFunction","onRegionTipShow","code","_","isNumber","html","prevProps","nextProps","isEqual","Text","Typography","COLORS","RADIAN","PI","renderCustomizedLabel","cx","cy","midAngle","innerRadius","outerRadius","percent","radius","index","cos","y","sin","textAnchor","dominantBaseline","toFixed","PieInfo","nation","xs","strong","location_name","year","Tong_Export","Tong_Import","data","name","value","gutter","labelLine","label","dataKey","entry","length","alignItems","Option","Select","setCountryCodeIso2","country_code_iso2","showSearch","placeholder","optionFilterProp","onChange","val","filterOption","input","option","toLowerCase","indexOf","country_code_iso2_data","item","getCountryISO3","radioStyle","lineHeight","warning","message","Home","useState","undefined","setYear","view_type","setViewType","setMapData","setMarkers","setNation","nation_other","setNationOther","view_detail","setViewDetail","useSelector","partner_year_data","sum_balance_data","Background","current_nation","filter","isEmpty","SelectCountry","select","i","createYear","Group","target","onClick","map_data_result","data_filter_year_coutry","partner_code_ios2","country_geocode","latLng","latitude","longitude","success","marginLeft","PieChart","flexDirection","marginRight","getYearFilterData","text","getCoutryFilterData","columns_balance","dataIndex","filters","onFilter","record","sorter","a","b","ellipsis","includes","Balance","columns_partner","columns_percent","SumImport","SumExport","Percent_Session_Im","PercentIm","Percent_Session_Ex","PercentEx","file","setFile","columns","setColumns","Immutable","asMutable","deep","data_source","setDataSource","percent_product_data","dataSource","rowKey","show_export","show_import","show_balance","is_group","margin","top","right","left","bottom","strokeDasharray","stackId","syncId","start","end","from_year","setFromYear","to_year","setToYear","area_data","setAreaData","setIsGroup","setShowImport","setShowExport","setShowBalance","StackedAreaChart","LineChart","checked","filter_data","1","color","2","3","4","5","6","7","8","9","root","identity","innerPadding","outerPadding","tooltip","sum","labelSkipSize","labelTextColor","colors","borderWidth","borderColor","animate","motionStiffness","motionDamping","leavesOnly","data_tree","setDataTree","filter_data_by_coutry_year","group_by_session_code","ele","Session_code","product_id","id","base_colors","children_root","Object","data_tree_map","minWidth","maxWidth","StyledContainer","styled","Container","NotFound","layout","verticalPadding","fontSize","as","Splash","size","description","Main","main","MyRouter","defer","htmlAttributes","lang","encodeSpecialCharacters","defaultTitle","titleTemplate","titleAttributes","itemprop","path","exact","DataList","AreaChart","TreeMap","App","dispatch","useDispatch","balance_ready","setBalanceReady","partner_ready","setPartnerReady","percent_ready","setPercentReady","useEffect","Worker","wk","addEventListener","event","location_code","countries","getCountryISO2","country_code_iso3","Number","DataActions","postMessage","SumBalance","loadSumBalance","partner_code","partner_code_iso3","PartnerYear","loadPartnerYear","Session_name","Percent_Product","loadPercentProduct","ReactDOM","loading","getElementById","URL","process","href","origin","fetch","response","contentType","headers","get","status","ready","unregister","reload","checkValidServiceWorker","INITIAL_STATE","fromJS","createReducer","SET_SUM_BALANCE_DATA","params","merge","SET_PARTNER_YEAR_DATA","SET_PERCENT_PRODUCT_DATA"],"mappings":"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","file":"static/js/main.5374ef64.chunk.js","sourcesContent":["import { createActions } from 'reduxsauce';\n\nexport const { Types, Creators } = createActions({\n    setSumBalanceData: ['params'],\n    setPartnerYearData: ['params'],\n    setPercentProductData: ['params'],\n});","import {  createStore } from 'redux';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\nimport root_reducer from '../reducers';\n\nconst reducer = persistReducer(\n    {\n        key: 'rrsb',\n        storage, \n        whitelist: [],\n    },\n    root_reducer\n);\n\n/* istanbul ignore next */\nconst configStore = (initialState = {}) => {\n    const store = createStore(reducer, initialState, );\n\n    return {\n        persistor: persistStore(store),\n        store,\n    };\n};\n\nconst { store, persistor } = configStore();\n\nglobal.store = store;\n\nexport { store, persistor };\n","//lib\nimport { combineReducers } from 'redux';\n\nconst root_reducer = combineReducers({\n    data_reducer: require('./data-reducer').reducer,\n})\n\nexport default root_reducer;","module.exports = __webpack_public_path__ + \"static/media/SumBalance.6f2c4dd3.csv\";","module.exports = __webpack_public_path__ + \"static/media/Export_import_partner_year.b89e0cc2.csv\";","module.exports = __webpack_public_path__ + \"static/media/Percent.9d020096.csv\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n\twindow.location.hostname === 'localhost' ||\n\t// [::1] is the IPv6 localhost address.\n\twindow.location.hostname === '[::1]' ||\n\t// 127.0.0.1/8 is considered localhost for IPv4.\n\twindow.location.hostname.match(\n\t\t/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n\t)\n);\n\nexport function register(config) {\n\tif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\n\t\t\treturn;\n\t\t}\n\n\t\twindow.addEventListener('load', () => {\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n\t\t\tif (isLocalhost) {\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl, config);\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t\t// service worker/PWA documentation.\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t'This web app is being served cache-first by a service ' +\n\t\t\t\t\t\t'worker. To learn more, visit https://bit.ly/CRA-PWA'\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Is not localhost. Just register service worker\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t});\n\t}\n}\n\nfunction registerValidSW(swUrl, config) {\n\tnavigator.serviceWorker\n\t\t.register(swUrl)\n\t\t.then(registration => {\n\t\t\tregistration.onupdatefound = () => {\n\t\t\t\tconst installingWorker = registration.installing;\n\t\t\t\tif (installingWorker == null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\t\tif (installingWorker.state === 'installed') {\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\n\t\t\t\t\t\t\t// but the previous service worker will still serve the older\n\t\t\t\t\t\t\t// content until all client tabs are closed.\n\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t'New content is available and will be used when all ' +\n\t\t\t\t\t\t\t\t'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onUpdate) {\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\t\tconsole.log('Content is cached for offline use.');\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onSuccess) {\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\t\t})\n\t\t.catch(error => {\n\t\t\tconsole.error('Error during service worker registration:', error);\n\t\t});\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl)\n\t\t.then(response => {\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\t\tconst contentType = response.headers.get('content-type');\n\t\t\tif (\n\t\t\t\tresponse.status === 404 ||\n\t\t\t\t(contentType != null && contentType.indexOf('javascript') === -1)\n\t\t\t) {\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\t\tnavigator.serviceWorker.ready.then(registration => {\n\t\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Service worker found. Proceed as normal.\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tconsole.log(\n\t\t\t\t'No internet connection found. App is running in offline mode.'\n\t\t\t);\n\t\t});\n}\n\nexport function unregister() {\n\tif ('serviceWorker' in navigator) {\n\t\tnavigator.serviceWorker.ready.then(registration => {\n\t\t\tregistration.unregister();\n\t\t});\n\t}\n}\n","// @flow\nimport { createBrowserHistory } from 'history';\nimport qs from 'qs';\n\nconst history = createBrowserHistory();\n\nhistory.location = {\n    ...history.location,\n    query: qs.parse(history.location.search.substr(1)),\n    state: {},\n};\n\n/* istanbul ignore next */\nhistory.listen(() => {\n    history.location = {\n        ...history.location,\n        query: qs.parse(history.location.search.substr(1)),\n        state: history.location.state || {},\n    };\n});\n\nconst { go, goBack, push, replace } = history;\n\nexport { go, goBack, push, replace };\nexport default history;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Route, Redirect } from 'react-router-dom';\n\nconst RoutePublic = ({ component: Component, isAuthenticated, to, ...rest }) => (\n    <Route\n        {...rest}\n        render={props => (isAuthenticated ? <Redirect to={to} /> : <Component {...props} />)}\n    />\n);\n\nRoutePublic.propTypes = {\n    component: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired,\n    isAuthenticated: PropTypes.bool.isRequired,\n    to: PropTypes.string,\n};\n\nRoutePublic.defaultProps = {\n    to: '/private',\n};\n\nexport default RoutePublic;\n","export default {\n    \"AD\": {\n        \"country\": \"AD\",\n        \"latitude\": 42.546245,\n        \"longitude\": 1.601554,\n        \"name\": \"Andorra\"\n    },\n    \"AE\": {\n        \"country\": \"AE\",\n        \"latitude\": 23.424076,\n        \"longitude\": 53.847818,\n        \"name\": \"United Arab Emirates\"\n    },\n    \"AF\": {\n        \"country\": \"AF\",\n        \"latitude\": 33.93911,\n        \"longitude\": 67.709953,\n        \"name\": \"Afghanistan\"\n    },\n    \"AG\": {\n        \"country\": \"AG\",\n        \"latitude\": 17.060816,\n        \"longitude\": -61.796428,\n        \"name\": \"Antigua and Barbuda\"\n    },\n    \"AI\": {\n        \"country\": \"AI\",\n        \"latitude\": 18.220554,\n        \"longitude\": -63.068615,\n        \"name\": \"Anguilla\"\n    },\n    \"AL\": {\n        \"country\": \"AL\",\n        \"latitude\": 41.153332,\n        \"longitude\": 20.168331,\n        \"name\": \"Albania\"\n    },\n    \"AM\": {\n        \"country\": \"AM\",\n        \"latitude\": 40.069099,\n        \"longitude\": 45.038189,\n        \"name\": \"Armenia\"\n    },\n    \"AN\": {\n        \"country\": \"AN\",\n        \"latitude\": 12.226079,\n        \"longitude\": -69.060087,\n        \"name\": \"Netherlands Antilles\"\n    },\n    \"AO\": {\n        \"country\": \"AO\",\n        \"latitude\": -11.202692,\n        \"longitude\": 17.873887,\n        \"name\": \"Angola\"\n    },\n    \"AQ\": {\n        \"country\": \"AQ\",\n        \"latitude\": -75.250973,\n        \"longitude\": -0.071389,\n        \"name\": \"Antarctica\"\n    },\n    \"AR\": {\n        \"country\": \"AR\",\n        \"latitude\": -38.416097,\n        \"longitude\": -63.616672,\n        \"name\": \"Argentina\"\n    },\n    \"AS\": {\n        \"country\": \"AS\",\n        \"latitude\": -14.270972,\n        \"longitude\": -170.132217,\n        \"name\": \"American Samoa\"\n    },\n    \"AT\": {\n        \"country\": \"AT\",\n        \"latitude\": 47.516231,\n        \"longitude\": 14.550072,\n        \"name\": \"Austria\"\n    },\n    \"AU\": {\n        \"country\": \"AU\",\n        \"latitude\": -25.274398,\n        \"longitude\": 133.775136,\n        \"name\": \"Australia\"\n    },\n    \"AW\": {\n        \"country\": \"AW\",\n        \"latitude\": 12.52111,\n        \"longitude\": -69.968338,\n        \"name\": \"Aruba\"\n    },\n    \"AZ\": {\n        \"country\": \"AZ\",\n        \"latitude\": 40.143105,\n        \"longitude\": 47.576927,\n        \"name\": \"Azerbaijan\"\n    },\n    \"BA\": {\n        \"country\": \"BA\",\n        \"latitude\": 43.915886,\n        \"longitude\": 17.679076,\n        \"name\": \"Bosnia and Herzegovina\"\n    },\n    \"BB\": {\n        \"country\": \"BB\",\n        \"latitude\": 13.193887,\n        \"longitude\": -59.543198,\n        \"name\": \"Barbados\"\n    },\n    \"BD\": {\n        \"country\": \"BD\",\n        \"latitude\": 23.684994,\n        \"longitude\": 90.356331,\n        \"name\": \"Bangladesh\"\n    },\n    \"BE\": {\n        \"country\": \"BE\",\n        \"latitude\": 50.503887,\n        \"longitude\": 4.469936,\n        \"name\": \"Belgium\"\n    },\n    \"BF\": {\n        \"country\": \"BF\",\n        \"latitude\": 12.238333,\n        \"longitude\": -1.561593,\n        \"name\": \"Burkina Faso\"\n    },\n    \"BG\": {\n        \"country\": \"BG\",\n        \"latitude\": 42.733883,\n        \"longitude\": 25.48583,\n        \"name\": \"Bulgaria\"\n    },\n    \"BH\": {\n        \"country\": \"BH\",\n        \"latitude\": 25.930414,\n        \"longitude\": 50.637772,\n        \"name\": \"Bahrain\"\n    },\n    \"BI\": {\n        \"country\": \"BI\",\n        \"latitude\": -3.373056,\n        \"longitude\": 29.918886,\n        \"name\": \"Burundi\"\n    },\n    \"BJ\": {\n        \"country\": \"BJ\",\n        \"latitude\": 9.30769,\n        \"longitude\": 2.315834,\n        \"name\": \"Benin\"\n    },\n    \"BM\": {\n        \"country\": \"BM\",\n        \"latitude\": 32.321384,\n        \"longitude\": -64.75737,\n        \"name\": \"Bermuda\"\n    },\n    \"BN\": {\n        \"country\": \"BN\",\n        \"latitude\": 4.535277,\n        \"longitude\": 114.727669,\n        \"name\": \"Brunei\"\n    },\n    \"BO\": {\n        \"country\": \"BO\",\n        \"latitude\": -16.290154,\n        \"longitude\": -63.588653,\n        \"name\": \"Bolivia\"\n    },\n    \"BR\": {\n        \"country\": \"BR\",\n        \"latitude\": -14.235004,\n        \"longitude\": -51.92528,\n        \"name\": \"Brazil\"\n    },\n    \"BS\": {\n        \"country\": \"BS\",\n        \"latitude\": 25.03428,\n        \"longitude\": -77.39628,\n        \"name\": \"Bahamas\"\n    },\n    \"BT\": {\n        \"country\": \"BT\",\n        \"latitude\": 27.514162,\n        \"longitude\": 90.433601,\n        \"name\": \"Bhutan\"\n    },\n    \"BV\": {\n        \"country\": \"BV\",\n        \"latitude\": -54.423199,\n        \"longitude\": 3.413194,\n        \"name\": \"Bouvet Island\"\n    },\n    \"BW\": {\n        \"country\": \"BW\",\n        \"latitude\": -22.328474,\n        \"longitude\": 24.684866,\n        \"name\": \"Botswana\"\n    },\n    \"BY\": {\n        \"country\": \"BY\",\n        \"latitude\": 53.709807,\n        \"longitude\": 27.953389,\n        \"name\": \"Belarus\"\n    },\n    \"BZ\": {\n        \"country\": \"BZ\",\n        \"latitude\": 17.189877,\n        \"longitude\": -88.49765,\n        \"name\": \"Belize\"\n    },\n    \"CA\": {\n        \"country\": \"CA\",\n        \"latitude\": 56.130366,\n        \"longitude\": -106.346771,\n        \"name\": \"Canada\"\n    },\n    \"CC\": {\n        \"country\": \"CC\",\n        \"latitude\": -12.164165,\n        \"longitude\": 96.870956,\n        \"name\": \"Cocos [Keeling] Islands\"\n    },\n    \"CD\": {\n        \"country\": \"CD\",\n        \"latitude\": -4.038333,\n        \"longitude\": 21.758664,\n        \"name\": \"Congo [DRC]\"\n    },\n    \"CF\": {\n        \"country\": \"CF\",\n        \"latitude\": 6.611111,\n        \"longitude\": 20.939444,\n        \"name\": \"Central African Republic\"\n    },\n    \"CG\": {\n        \"country\": \"CG\",\n        \"latitude\": -0.228021,\n        \"longitude\": 15.827659,\n        \"name\": \"Congo [Republic]\"\n    },\n    \"CH\": {\n        \"country\": \"CH\",\n        \"latitude\": 46.818188,\n        \"longitude\": 8.227512,\n        \"name\": \"Switzerland\"\n    },\n    \"CI\": {\n        \"country\": \"CI\",\n        \"latitude\": 7.539989,\n        \"longitude\": -5.54708,\n        \"name\": \"Côte d'Ivoire\"\n    },\n    \"CK\": {\n        \"country\": \"CK\",\n        \"latitude\": -21.236736,\n        \"longitude\": -159.777671,\n        \"name\": \"Cook Islands\"\n    },\n    \"CL\": {\n        \"country\": \"CL\",\n        \"latitude\": -35.675147,\n        \"longitude\": -71.542969,\n        \"name\": \"Chile\"\n    },\n    \"CM\": {\n        \"country\": \"CM\",\n        \"latitude\": 7.369722,\n        \"longitude\": 12.354722,\n        \"name\": \"Cameroon\"\n    },\n    \"CN\": {\n        \"country\": \"CN\",\n        \"latitude\": 35.86166,\n        \"longitude\": 104.195397,\n        \"name\": \"China\"\n    },\n    \"CO\": {\n        \"country\": \"CO\",\n        \"latitude\": 4.570868,\n        \"longitude\": -74.297333,\n        \"name\": \"Colombia\"\n    },\n    \"CR\": {\n        \"country\": \"CR\",\n        \"latitude\": 9.748917,\n        \"longitude\": -83.753428,\n        \"name\": \"Costa Rica\"\n    },\n    \"CU\": {\n        \"country\": \"CU\",\n        \"latitude\": 21.521757,\n        \"longitude\": -77.781167,\n        \"name\": \"Cuba\"\n    },\n    \"CV\": {\n        \"country\": \"CV\",\n        \"latitude\": 16.002082,\n        \"longitude\": -24.013197,\n        \"name\": \"Cape Verde\"\n    },\n    \"CX\": {\n        \"country\": \"CX\",\n        \"latitude\": -10.447525,\n        \"longitude\": 105.690449,\n        \"name\": \"Christmas Island\"\n    },\n    \"CY\": {\n        \"country\": \"CY\",\n        \"latitude\": 35.126413,\n        \"longitude\": 33.429859,\n        \"name\": \"Cyprus\"\n    },\n    \"CZ\": {\n        \"country\": \"CZ\",\n        \"latitude\": 49.817492,\n        \"longitude\": 15.472962,\n        \"name\": \"Czech Republic\"\n    },\n    \"DE\": {\n        \"country\": \"DE\",\n        \"latitude\": 51.165691,\n        \"longitude\": 10.451526,\n        \"name\": \"Germany\"\n    },\n    \"DJ\": {\n        \"country\": \"DJ\",\n        \"latitude\": 11.825138,\n        \"longitude\": 42.590275,\n        \"name\": \"Djibouti\"\n    },\n    \"DK\": {\n        \"country\": \"DK\",\n        \"latitude\": 56.26392,\n        \"longitude\": 9.501785,\n        \"name\": \"Denmark\"\n    },\n    \"DM\": {\n        \"country\": \"DM\",\n        \"latitude\": 15.414999,\n        \"longitude\": -61.370976,\n        \"name\": \"Dominica\"\n    },\n    \"DO\": {\n        \"country\": \"DO\",\n        \"latitude\": 18.735693,\n        \"longitude\": -70.162651,\n        \"name\": \"Dominican Republic\"\n    },\n    \"DZ\": {\n        \"country\": \"DZ\",\n        \"latitude\": 28.033886,\n        \"longitude\": 1.659626,\n        \"name\": \"Algeria\"\n    },\n    \"EC\": {\n        \"country\": \"EC\",\n        \"latitude\": -1.831239,\n        \"longitude\": -78.183406,\n        \"name\": \"Ecuador\"\n    },\n    \"EE\": {\n        \"country\": \"EE\",\n        \"latitude\": 58.595272,\n        \"longitude\": 25.013607,\n        \"name\": \"Estonia\"\n    },\n    \"EG\": {\n        \"country\": \"EG\",\n        \"latitude\": 26.820553,\n        \"longitude\": 30.802498,\n        \"name\": \"Egypt\"\n    },\n    \"EH\": {\n        \"country\": \"EH\",\n        \"latitude\": 24.215527,\n        \"longitude\": -12.885834,\n        \"name\": \"Western Sahara\"\n    },\n    \"ER\": {\n        \"country\": \"ER\",\n        \"latitude\": 15.179384,\n        \"longitude\": 39.782334,\n        \"name\": \"Eritrea\"\n    },\n    \"ES\": {\n        \"country\": \"ES\",\n        \"latitude\": 40.463667,\n        \"longitude\": -3.74922,\n        \"name\": \"Spain\"\n    },\n    \"ET\": {\n        \"country\": \"ET\",\n        \"latitude\": 9.145,\n        \"longitude\": 40.489673,\n        \"name\": \"Ethiopia\"\n    },\n    \"FI\": {\n        \"country\": \"FI\",\n        \"latitude\": 61.92411,\n        \"longitude\": 25.748151,\n        \"name\": \"Finland\"\n    },\n    \"FJ\": {\n        \"country\": \"FJ\",\n        \"latitude\": -16.578193,\n        \"longitude\": 179.414413,\n        \"name\": \"Fiji\"\n    },\n    \"FK\": {\n        \"country\": \"FK\",\n        \"latitude\": -51.796253,\n        \"longitude\": -59.523613,\n        \"name\": \"Falkland Islands [Islas Malvinas]\"\n    },\n    \"FM\": {\n        \"country\": \"FM\",\n        \"latitude\": 7.425554,\n        \"longitude\": 150.550812,\n        \"name\": \"Micronesia\"\n    },\n    \"FO\": {\n        \"country\": \"FO\",\n        \"latitude\": 61.892635,\n        \"longitude\": -6.911806,\n        \"name\": \"Faroe Islands\"\n    },\n    \"FR\": {\n        \"country\": \"FR\",\n        \"latitude\": 46.227638,\n        \"longitude\": 2.213749,\n        \"name\": \"France\"\n    },\n    \"GA\": {\n        \"country\": \"GA\",\n        \"latitude\": -0.803689,\n        \"longitude\": 11.609444,\n        \"name\": \"Gabon\"\n    },\n    \"GB\": {\n        \"country\": \"GB\",\n        \"latitude\": 55.378051,\n        \"longitude\": -3.435973,\n        \"name\": \"United Kingdom\"\n    },\n    \"GD\": {\n        \"country\": \"GD\",\n        \"latitude\": 12.262776,\n        \"longitude\": -61.604171,\n        \"name\": \"Grenada\"\n    },\n    \"GE\": {\n        \"country\": \"GE\",\n        \"latitude\": 42.315407,\n        \"longitude\": 43.356892,\n        \"name\": \"Georgia\"\n    },\n    \"GF\": {\n        \"country\": \"GF\",\n        \"latitude\": 3.933889,\n        \"longitude\": -53.125782,\n        \"name\": \"French Guiana\"\n    },\n    \"GG\": {\n        \"country\": \"GG\",\n        \"latitude\": 49.465691,\n        \"longitude\": -2.585278,\n        \"name\": \"Guernsey\"\n    },\n    \"GH\": {\n        \"country\": \"GH\",\n        \"latitude\": 7.946527,\n        \"longitude\": -1.023194,\n        \"name\": \"Ghana\"\n    },\n    \"GI\": {\n        \"country\": \"GI\",\n        \"latitude\": 36.137741,\n        \"longitude\": -5.345374,\n        \"name\": \"Gibraltar\"\n    },\n    \"GL\": {\n        \"country\": \"GL\",\n        \"latitude\": 71.706936,\n        \"longitude\": -42.604303,\n        \"name\": \"Greenland\"\n    },\n    \"GM\": {\n        \"country\": \"GM\",\n        \"latitude\": 13.443182,\n        \"longitude\": -15.310139,\n        \"name\": \"Gambia\"\n    },\n    \"GN\": {\n        \"country\": \"GN\",\n        \"latitude\": 9.945587,\n        \"longitude\": -9.696645,\n        \"name\": \"Guinea\"\n    },\n    \"GP\": {\n        \"country\": \"GP\",\n        \"latitude\": 16.995971,\n        \"longitude\": -62.067641,\n        \"name\": \"Guadeloupe\"\n    },\n    \"GQ\": {\n        \"country\": \"GQ\",\n        \"latitude\": 1.650801,\n        \"longitude\": 10.267895,\n        \"name\": \"Equatorial Guinea\"\n    },\n    \"GR\": {\n        \"country\": \"GR\",\n        \"latitude\": 39.074208,\n        \"longitude\": 21.824312,\n        \"name\": \"Greece\"\n    },\n    \"GS\": {\n        \"country\": \"GS\",\n        \"latitude\": -54.429579,\n        \"longitude\": -36.587909,\n        \"name\": \"South Georgia and the South Sandwich Islands\"\n    },\n    \"GT\": {\n        \"country\": \"GT\",\n        \"latitude\": 15.783471,\n        \"longitude\": -90.230759,\n        \"name\": \"Guatemala\"\n    },\n    \"GU\": {\n        \"country\": \"GU\",\n        \"latitude\": 13.444304,\n        \"longitude\": 144.793731,\n        \"name\": \"Guam\"\n    },\n    \"GW\": {\n        \"country\": \"GW\",\n        \"latitude\": 11.803749,\n        \"longitude\": -15.180413,\n        \"name\": \"Guinea-Bissau\"\n    },\n    \"GY\": {\n        \"country\": \"GY\",\n        \"latitude\": 4.860416,\n        \"longitude\": -58.93018,\n        \"name\": \"Guyana\"\n    },\n    \"GZ\": {\n        \"country\": \"GZ\",\n        \"latitude\": 31.354676,\n        \"longitude\": 34.308825,\n        \"name\": \"Gaza Strip\"\n    },\n    \"HK\": {\n        \"country\": \"HK\",\n        \"latitude\": 22.396428,\n        \"longitude\": 114.109497,\n        \"name\": \"Hong Kong\"\n    },\n    \"HM\": {\n        \"country\": \"HM\",\n        \"latitude\": -53.08181,\n        \"longitude\": 73.504158,\n        \"name\": \"Heard Island and McDonald Islands\"\n    },\n    \"HN\": {\n        \"country\": \"HN\",\n        \"latitude\": 15.199999,\n        \"longitude\": -86.241905,\n        \"name\": \"Honduras\"\n    },\n    \"HR\": {\n        \"country\": \"HR\",\n        \"latitude\": 45.1,\n        \"longitude\": 15.2,\n        \"name\": \"Croatia\"\n    },\n    \"HT\": {\n        \"country\": \"HT\",\n        \"latitude\": 18.971187,\n        \"longitude\": -72.285215,\n        \"name\": \"Haiti\"\n    },\n    \"HU\": {\n        \"country\": \"HU\",\n        \"latitude\": 47.162494,\n        \"longitude\": 19.503304,\n        \"name\": \"Hungary\"\n    },\n    \"ID\": {\n        \"country\": \"ID\",\n        \"latitude\": -0.789275,\n        \"longitude\": 113.921327,\n        \"name\": \"Indonesia\"\n    },\n    \"IE\": {\n        \"country\": \"IE\",\n        \"latitude\": 53.41291,\n        \"longitude\": -8.24389,\n        \"name\": \"Ireland\"\n    },\n    \"IL\": {\n        \"country\": \"IL\",\n        \"latitude\": 31.046051,\n        \"longitude\": 34.851612,\n        \"name\": \"Israel\"\n    },\n    \"IM\": {\n        \"country\": \"IM\",\n        \"latitude\": 54.236107,\n        \"longitude\": -4.548056,\n        \"name\": \"Isle of Man\"\n    },\n    \"IN\": {\n        \"country\": \"IN\",\n        \"latitude\": 20.593684,\n        \"longitude\": 78.96288,\n        \"name\": \"India\"\n    },\n    \"IO\": {\n        \"country\": \"IO\",\n        \"latitude\": -6.343194,\n        \"longitude\": 71.876519,\n        \"name\": \"British Indian Ocean Territory\"\n    },\n    \"IQ\": {\n        \"country\": \"IQ\",\n        \"latitude\": 33.223191,\n        \"longitude\": 43.679291,\n        \"name\": \"Iraq\"\n    },\n    \"IR\": {\n        \"country\": \"IR\",\n        \"latitude\": 32.427908,\n        \"longitude\": 53.688046,\n        \"name\": \"Iran\"\n    },\n    \"IS\": {\n        \"country\": \"IS\",\n        \"latitude\": 64.963051,\n        \"longitude\": -19.020835,\n        \"name\": \"Iceland\"\n    },\n    \"IT\": {\n        \"country\": \"IT\",\n        \"latitude\": 41.87194,\n        \"longitude\": 12.56738,\n        \"name\": \"Italy\"\n    },\n    \"JE\": {\n        \"country\": \"JE\",\n        \"latitude\": 49.214439,\n        \"longitude\": -2.13125,\n        \"name\": \"Jersey\"\n    },\n    \"JM\": {\n        \"country\": \"JM\",\n        \"latitude\": 18.109581,\n        \"longitude\": -77.297508,\n        \"name\": \"Jamaica\"\n    },\n    \"JO\": {\n        \"country\": \"JO\",\n        \"latitude\": 30.585164,\n        \"longitude\": 36.238414,\n        \"name\": \"Jordan\"\n    },\n    \"JP\": {\n        \"country\": \"JP\",\n        \"latitude\": 36.204824,\n        \"longitude\": 138.252924,\n        \"name\": \"Japan\"\n    },\n    \"KE\": {\n        \"country\": \"KE\",\n        \"latitude\": -0.023559,\n        \"longitude\": 37.906193,\n        \"name\": \"Kenya\"\n    },\n    \"KG\": {\n        \"country\": \"KG\",\n        \"latitude\": 41.20438,\n        \"longitude\": 74.766098,\n        \"name\": \"Kyrgyzstan\"\n    },\n    \"KH\": {\n        \"country\": \"KH\",\n        \"latitude\": 12.565679,\n        \"longitude\": 104.990963,\n        \"name\": \"Cambodia\"\n    },\n    \"KI\": {\n        \"country\": \"KI\",\n        \"latitude\": -3.370417,\n        \"longitude\": -168.734039,\n        \"name\": \"Kiribati\"\n    },\n    \"KM\": {\n        \"country\": \"KM\",\n        \"latitude\": -11.875001,\n        \"longitude\": 43.872219,\n        \"name\": \"Comoros\"\n    },\n    \"KN\": {\n        \"country\": \"KN\",\n        \"latitude\": 17.357822,\n        \"longitude\": -62.782998,\n        \"name\": \"Saint Kitts and Nevis\"\n    },\n    \"KP\": {\n        \"country\": \"KP\",\n        \"latitude\": 40.339852,\n        \"longitude\": 127.510093,\n        \"name\": \"North Korea\"\n    },\n    \"KR\": {\n        \"country\": \"KR\",\n        \"latitude\": 35.907757,\n        \"longitude\": 127.766922,\n        \"name\": \"South Korea\"\n    },\n    \"KW\": {\n        \"country\": \"KW\",\n        \"latitude\": 29.31166,\n        \"longitude\": 47.481766,\n        \"name\": \"Kuwait\"\n    },\n    \"KY\": {\n        \"country\": \"KY\",\n        \"latitude\": 19.513469,\n        \"longitude\": -80.566956,\n        \"name\": \"Cayman Islands\"\n    },\n    \"KZ\": {\n        \"country\": \"KZ\",\n        \"latitude\": 48.019573,\n        \"longitude\": 66.923684,\n        \"name\": \"Kazakhstan\"\n    },\n    \"LA\": {\n        \"country\": \"LA\",\n        \"latitude\": 19.85627,\n        \"longitude\": 102.495496,\n        \"name\": \"Laos\"\n    },\n    \"LB\": {\n        \"country\": \"LB\",\n        \"latitude\": 33.854721,\n        \"longitude\": 35.862285,\n        \"name\": \"Lebanon\"\n    },\n    \"LC\": {\n        \"country\": \"LC\",\n        \"latitude\": 13.909444,\n        \"longitude\": -60.978893,\n        \"name\": \"Saint Lucia\"\n    },\n    \"LI\": {\n        \"country\": \"LI\",\n        \"latitude\": 47.166,\n        \"longitude\": 9.555373,\n        \"name\": \"Liechtenstein\"\n    },\n    \"LK\": {\n        \"country\": \"LK\",\n        \"latitude\": 7.873054,\n        \"longitude\": 80.771797,\n        \"name\": \"Sri Lanka\"\n    },\n    \"LR\": {\n        \"country\": \"LR\",\n        \"latitude\": 6.428055,\n        \"longitude\": -9.429499,\n        \"name\": \"Liberia\"\n    },\n    \"LS\": {\n        \"country\": \"LS\",\n        \"latitude\": -29.609988,\n        \"longitude\": 28.233608,\n        \"name\": \"Lesotho\"\n    },\n    \"LT\": {\n        \"country\": \"LT\",\n        \"latitude\": 55.169438,\n        \"longitude\": 23.881275,\n        \"name\": \"Lithuania\"\n    },\n    \"LU\": {\n        \"country\": \"LU\",\n        \"latitude\": 49.815273,\n        \"longitude\": 6.129583,\n        \"name\": \"Luxembourg\"\n    },\n    \"LV\": {\n        \"country\": \"LV\",\n        \"latitude\": 56.879635,\n        \"longitude\": 24.603189,\n        \"name\": \"Latvia\"\n    },\n    \"LY\": {\n        \"country\": \"LY\",\n        \"latitude\": 26.3351,\n        \"longitude\": 17.228331,\n        \"name\": \"Libya\"\n    },\n    \"MA\": {\n        \"country\": \"MA\",\n        \"latitude\": 31.791702,\n        \"longitude\": -7.09262,\n        \"name\": \"Morocco\"\n    },\n    \"MC\": {\n        \"country\": \"MC\",\n        \"latitude\": 43.750298,\n        \"longitude\": 7.412841,\n        \"name\": \"Monaco\"\n    },\n    \"MD\": {\n        \"country\": \"MD\",\n        \"latitude\": 47.411631,\n        \"longitude\": 28.369885,\n        \"name\": \"Moldova\"\n    },\n    \"ME\": {\n        \"country\": \"ME\",\n        \"latitude\": 42.708678,\n        \"longitude\": 19.37439,\n        \"name\": \"Montenegro\"\n    },\n    \"MG\": {\n        \"country\": \"MG\",\n        \"latitude\": -18.766947,\n        \"longitude\": 46.869107,\n        \"name\": \"Madagascar\"\n    },\n    \"MH\": {\n        \"country\": \"MH\",\n        \"latitude\": 7.131474,\n        \"longitude\": 171.184478,\n        \"name\": \"Marshall Islands\"\n    },\n    \"MK\": {\n        \"country\": \"MK\",\n        \"latitude\": 41.608635,\n        \"longitude\": 21.745275,\n        \"name\": \"Macedonia [FYROM]\"\n    },\n    \"ML\": {\n        \"country\": \"ML\",\n        \"latitude\": 17.570692,\n        \"longitude\": -3.996166,\n        \"name\": \"Mali\"\n    },\n    \"MM\": {\n        \"country\": \"MM\",\n        \"latitude\": 21.913965,\n        \"longitude\": 95.956223,\n        \"name\": \"Myanmar [Burma]\"\n    },\n    \"MN\": {\n        \"country\": \"MN\",\n        \"latitude\": 46.862496,\n        \"longitude\": 103.846656,\n        \"name\": \"Mongolia\"\n    },\n    \"MO\": {\n        \"country\": \"MO\",\n        \"latitude\": 22.198745,\n        \"longitude\": 113.543873,\n        \"name\": \"Macau\"\n    },\n    \"MP\": {\n        \"country\": \"MP\",\n        \"latitude\": 17.33083,\n        \"longitude\": 145.38469,\n        \"name\": \"Northern Mariana Islands\"\n    },\n    \"MQ\": {\n        \"country\": \"MQ\",\n        \"latitude\": 14.641528,\n        \"longitude\": -61.024174,\n        \"name\": \"Martinique\"\n    },\n    \"MR\": {\n        \"country\": \"MR\",\n        \"latitude\": 21.00789,\n        \"longitude\": -10.940835,\n        \"name\": \"Mauritania\"\n    },\n    \"MS\": {\n        \"country\": \"MS\",\n        \"latitude\": 16.742498,\n        \"longitude\": -62.187366,\n        \"name\": \"Montserrat\"\n    },\n    \"MT\": {\n        \"country\": \"MT\",\n        \"latitude\": 35.937496,\n        \"longitude\": 14.375416,\n        \"name\": \"Malta\"\n    },\n    \"MU\": {\n        \"country\": \"MU\",\n        \"latitude\": -20.348404,\n        \"longitude\": 57.552152,\n        \"name\": \"Mauritius\"\n    },\n    \"MV\": {\n        \"country\": \"MV\",\n        \"latitude\": 3.202778,\n        \"longitude\": 73.22068,\n        \"name\": \"Maldives\"\n    },\n    \"MW\": {\n        \"country\": \"MW\",\n        \"latitude\": -13.254308,\n        \"longitude\": 34.301525,\n        \"name\": \"Malawi\"\n    },\n    \"MX\": {\n        \"country\": \"MX\",\n        \"latitude\": 23.634501,\n        \"longitude\": -102.552784,\n        \"name\": \"Mexico\"\n    },\n    \"MY\": {\n        \"country\": \"MY\",\n        \"latitude\": 4.210484,\n        \"longitude\": 101.975766,\n        \"name\": \"Malaysia\"\n    },\n    \"MZ\": {\n        \"country\": \"MZ\",\n        \"latitude\": -18.665695,\n        \"longitude\": 35.529562,\n        \"name\": \"Mozambique\"\n    },\n    \"NA\": {\n        \"country\": \"NA\",\n        \"latitude\": -22.95764,\n        \"longitude\": 18.49041,\n        \"name\": \"Namibia\"\n    },\n    \"NC\": {\n        \"country\": \"NC\",\n        \"latitude\": -20.904305,\n        \"longitude\": 165.618042,\n        \"name\": \"New Caledonia\"\n    },\n    \"NE\": {\n        \"country\": \"NE\",\n        \"latitude\": 17.607789,\n        \"longitude\": 8.081666,\n        \"name\": \"Niger\"\n    },\n    \"NF\": {\n        \"country\": \"NF\",\n        \"latitude\": -29.040835,\n        \"longitude\": 167.954712,\n        \"name\": \"Norfolk Island\"\n    },\n    \"NG\": {\n        \"country\": \"NG\",\n        \"latitude\": 9.081999,\n        \"longitude\": 8.675277,\n        \"name\": \"Nigeria\"\n    },\n    \"NI\": {\n        \"country\": \"NI\",\n        \"latitude\": 12.865416,\n        \"longitude\": -85.207229,\n        \"name\": \"Nicaragua\"\n    },\n    \"NL\": {\n        \"country\": \"NL\",\n        \"latitude\": 52.132633,\n        \"longitude\": 5.291266,\n        \"name\": \"Netherlands\"\n    },\n    \"NO\": {\n        \"country\": \"NO\",\n        \"latitude\": 60.472024,\n        \"longitude\": 8.468946,\n        \"name\": \"Norway\"\n    },\n    \"NP\": {\n        \"country\": \"NP\",\n        \"latitude\": 28.394857,\n        \"longitude\": 84.124008,\n        \"name\": \"Nepal\"\n    },\n    \"NR\": {\n        \"country\": \"NR\",\n        \"latitude\": -0.522778,\n        \"longitude\": 166.931503,\n        \"name\": \"Nauru\"\n    },\n    \"NU\": {\n        \"country\": \"NU\",\n        \"latitude\": -19.054445,\n        \"longitude\": -169.867233,\n        \"name\": \"Niue\"\n    },\n    \"NZ\": {\n        \"country\": \"NZ\",\n        \"latitude\": -40.900557,\n        \"longitude\": 174.885971,\n        \"name\": \"New Zealand\"\n    },\n    \"OM\": {\n        \"country\": \"OM\",\n        \"latitude\": 21.512583,\n        \"longitude\": 55.923255,\n        \"name\": \"Oman\"\n    },\n    \"PA\": {\n        \"country\": \"PA\",\n        \"latitude\": 8.537981,\n        \"longitude\": -80.782127,\n        \"name\": \"Panama\"\n    },\n    \"PE\": {\n        \"country\": \"PE\",\n        \"latitude\": -9.189967,\n        \"longitude\": -75.015152,\n        \"name\": \"Peru\"\n    },\n    \"PF\": {\n        \"country\": \"PF\",\n        \"latitude\": -17.679742,\n        \"longitude\": -149.406843,\n        \"name\": \"French Polynesia\"\n    },\n    \"PG\": {\n        \"country\": \"PG\",\n        \"latitude\": -6.314993,\n        \"longitude\": 143.95555,\n        \"name\": \"Papua New Guinea\"\n    },\n    \"PH\": {\n        \"country\": \"PH\",\n        \"latitude\": 12.879721,\n        \"longitude\": 121.774017,\n        \"name\": \"Philippines\"\n    },\n    \"PK\": {\n        \"country\": \"PK\",\n        \"latitude\": 30.375321,\n        \"longitude\": 69.345116,\n        \"name\": \"Pakistan\"\n    },\n    \"PL\": {\n        \"country\": \"PL\",\n        \"latitude\": 51.919438,\n        \"longitude\": 19.145136,\n        \"name\": \"Poland\"\n    },\n    \"PM\": {\n        \"country\": \"PM\",\n        \"latitude\": 46.941936,\n        \"longitude\": -56.27111,\n        \"name\": \"Saint Pierre and Miquelon\"\n    },\n    \"PN\": {\n        \"country\": \"PN\",\n        \"latitude\": -24.703615,\n        \"longitude\": -127.439308,\n        \"name\": \"Pitcairn Islands\"\n    },\n    \"PR\": {\n        \"country\": \"PR\",\n        \"latitude\": 18.220833,\n        \"longitude\": -66.590149,\n        \"name\": \"Puerto Rico\"\n    },\n    \"PS\": {\n        \"country\": \"PS\",\n        \"latitude\": 31.952162,\n        \"longitude\": 35.233154,\n        \"name\": \"Palestinian Territories\"\n    },\n    \"PT\": {\n        \"country\": \"PT\",\n        \"latitude\": 39.399872,\n        \"longitude\": -8.224454,\n        \"name\": \"Portugal\"\n    },\n    \"PW\": {\n        \"country\": \"PW\",\n        \"latitude\": 7.51498,\n        \"longitude\": 134.58252,\n        \"name\": \"Palau\"\n    },\n    \"PY\": {\n        \"country\": \"PY\",\n        \"latitude\": -23.442503,\n        \"longitude\": -58.443832,\n        \"name\": \"Paraguay\"\n    },\n    \"QA\": {\n        \"country\": \"QA\",\n        \"latitude\": 25.354826,\n        \"longitude\": 51.183884,\n        \"name\": \"Qatar\"\n    },\n    \"RE\": {\n        \"country\": \"RE\",\n        \"latitude\": -21.115141,\n        \"longitude\": 55.536384,\n        \"name\": \"Réunion\"\n    },\n    \"RO\": {\n        \"country\": \"RO\",\n        \"latitude\": 45.943161,\n        \"longitude\": 24.96676,\n        \"name\": \"Romania\"\n    },\n    \"RS\": {\n        \"country\": \"RS\",\n        \"latitude\": 44.016521,\n        \"longitude\": 21.005859,\n        \"name\": \"Serbia\"\n    },\n    \"RU\": {\n        \"country\": \"RU\",\n        \"latitude\": 61.52401,\n        \"longitude\": 105.318756,\n        \"name\": \"Russia\"\n    },\n    \"RW\": {\n        \"country\": \"RW\",\n        \"latitude\": -1.940278,\n        \"longitude\": 29.873888,\n        \"name\": \"Rwanda\"\n    },\n    \"SA\": {\n        \"country\": \"SA\",\n        \"latitude\": 23.885942,\n        \"longitude\": 45.079162,\n        \"name\": \"Saudi Arabia\"\n    },\n    \"SB\": {\n        \"country\": \"SB\",\n        \"latitude\": -9.64571,\n        \"longitude\": 160.156194,\n        \"name\": \"Solomon Islands\"\n    },\n    \"SC\": {\n        \"country\": \"SC\",\n        \"latitude\": -4.679574,\n        \"longitude\": 55.491977,\n        \"name\": \"Seychelles\"\n    },\n    \"SD\": {\n        \"country\": \"SD\",\n        \"latitude\": 12.862807,\n        \"longitude\": 30.217636,\n        \"name\": \"Sudan\"\n    },\n    \"SE\": {\n        \"country\": \"SE\",\n        \"latitude\": 60.128161,\n        \"longitude\": 18.643501,\n        \"name\": \"Sweden\"\n    },\n    \"SG\": {\n        \"country\": \"SG\",\n        \"latitude\": 1.352083,\n        \"longitude\": 103.819836,\n        \"name\": \"Singapore\"\n    },\n    \"SH\": {\n        \"country\": \"SH\",\n        \"latitude\": -24.143474,\n        \"longitude\": -10.030696,\n        \"name\": \"Saint Helena\"\n    },\n    \"SI\": {\n        \"country\": \"SI\",\n        \"latitude\": 46.151241,\n        \"longitude\": 14.995463,\n        \"name\": \"Slovenia\"\n    },\n    \"SJ\": {\n        \"country\": \"SJ\",\n        \"latitude\": 77.553604,\n        \"longitude\": 23.670272,\n        \"name\": \"Svalbard and Jan Mayen\"\n    },\n    \"SK\": {\n        \"country\": \"SK\",\n        \"latitude\": 48.669026,\n        \"longitude\": 19.699024,\n        \"name\": \"Slovakia\"\n    },\n    \"SL\": {\n        \"country\": \"SL\",\n        \"latitude\": 8.460555,\n        \"longitude\": -11.779889,\n        \"name\": \"Sierra Leone\"\n    },\n    \"SM\": {\n        \"country\": \"SM\",\n        \"latitude\": 43.94236,\n        \"longitude\": 12.457777,\n        \"name\": \"San Marino\"\n    },\n    \"SN\": {\n        \"country\": \"SN\",\n        \"latitude\": 14.497401,\n        \"longitude\": -14.452362,\n        \"name\": \"Senegal\"\n    },\n    \"SO\": {\n        \"country\": \"SO\",\n        \"latitude\": 5.152149,\n        \"longitude\": 46.199616,\n        \"name\": \"Somalia\"\n    },\n    \"SR\": {\n        \"country\": \"SR\",\n        \"latitude\": 3.919305,\n        \"longitude\": -56.027783,\n        \"name\": \"Suriname\"\n    },\n    \"ST\": {\n        \"country\": \"ST\",\n        \"latitude\": 0.18636,\n        \"longitude\": 6.613081,\n        \"name\": \"São Tomé and Príncipe\"\n    },\n    \"SV\": {\n        \"country\": \"SV\",\n        \"latitude\": 13.794185,\n        \"longitude\": -88.89653,\n        \"name\": \"El Salvador\"\n    },\n    \"SY\": {\n        \"country\": \"SY\",\n        \"latitude\": 34.802075,\n        \"longitude\": 38.996815,\n        \"name\": \"Syria\"\n    },\n    \"SZ\": {\n        \"country\": \"SZ\",\n        \"latitude\": -26.522503,\n        \"longitude\": 31.465866,\n        \"name\": \"Swaziland\"\n    },\n    \"TC\": {\n        \"country\": \"TC\",\n        \"latitude\": 21.694025,\n        \"longitude\": -71.797928,\n        \"name\": \"Turks and Caicos Islands\"\n    },\n    \"TD\": {\n        \"country\": \"TD\",\n        \"latitude\": 15.454166,\n        \"longitude\": 18.732207,\n        \"name\": \"Chad\"\n    },\n    \"TF\": {\n        \"country\": \"TF\",\n        \"latitude\": -49.280366,\n        \"longitude\": 69.348557,\n        \"name\": \"French Southern Territories\"\n    },\n    \"TG\": {\n        \"country\": \"TG\",\n        \"latitude\": 8.619543,\n        \"longitude\": 0.824782,\n        \"name\": \"Togo\"\n    },\n    \"TH\": {\n        \"country\": \"TH\",\n        \"latitude\": 15.870032,\n        \"longitude\": 100.992541,\n        \"name\": \"Thailand\"\n    },\n    \"TJ\": {\n        \"country\": \"TJ\",\n        \"latitude\": 38.861034,\n        \"longitude\": 71.276093,\n        \"name\": \"Tajikistan\"\n    },\n    \"TK\": {\n        \"country\": \"TK\",\n        \"latitude\": -8.967363,\n        \"longitude\": -171.855881,\n        \"name\": \"Tokelau\"\n    },\n    \"TL\": {\n        \"country\": \"TL\",\n        \"latitude\": -8.874217,\n        \"longitude\": 125.727539,\n        \"name\": \"Timor-Leste\"\n    },\n    \"TM\": {\n        \"country\": \"TM\",\n        \"latitude\": 38.969719,\n        \"longitude\": 59.556278,\n        \"name\": \"Turkmenistan\"\n    },\n    \"TN\": {\n        \"country\": \"TN\",\n        \"latitude\": 33.886917,\n        \"longitude\": 9.537499,\n        \"name\": \"Tunisia\"\n    },\n    \"TO\": {\n        \"country\": \"TO\",\n        \"latitude\": -21.178986,\n        \"longitude\": -175.198242,\n        \"name\": \"Tonga\"\n    },\n    \"TR\": {\n        \"country\": \"TR\",\n        \"latitude\": 38.963745,\n        \"longitude\": 35.243322,\n        \"name\": \"Turkey\"\n    },\n    \"TT\": {\n        \"country\": \"TT\",\n        \"latitude\": 10.691803,\n        \"longitude\": -61.222503,\n        \"name\": \"Trinidad and Tobago\"\n    },\n    \"TV\": {\n        \"country\": \"TV\",\n        \"latitude\": -7.109535,\n        \"longitude\": 177.64933,\n        \"name\": \"Tuvalu\"\n    },\n    \"TW\": {\n        \"country\": \"TW\",\n        \"latitude\": 23.69781,\n        \"longitude\": 120.960515,\n        \"name\": \"Taiwan\"\n    },\n    \"TZ\": {\n        \"country\": \"TZ\",\n        \"latitude\": -6.369028,\n        \"longitude\": 34.888822,\n        \"name\": \"Tanzania\"\n    },\n    \"UA\": {\n        \"country\": \"UA\",\n        \"latitude\": 48.379433,\n        \"longitude\": 31.16558,\n        \"name\": \"Ukraine\"\n    },\n    \"UG\": {\n        \"country\": \"UG\",\n        \"latitude\": 1.373333,\n        \"longitude\": 32.290275,\n        \"name\": \"Uganda\"\n    },\n    \"UM\": {\n        \"country\": \"UM\",\n        \"latitude\": \"\",\n        \"longitude\": \"\",\n        \"name\": \"U.S. Minor Outlying Islands\"\n    },\n    \"US\": {\n        \"country\": \"US\",\n        \"latitude\": 37.09024,\n        \"longitude\": -95.712891,\n        \"name\": \"United States\"\n    },\n    \"UY\": {\n        \"country\": \"UY\",\n        \"latitude\": -32.522779,\n        \"longitude\": -55.765835,\n        \"name\": \"Uruguay\"\n    },\n    \"UZ\": {\n        \"country\": \"UZ\",\n        \"latitude\": 41.377491,\n        \"longitude\": 64.585262,\n        \"name\": \"Uzbekistan\"\n    },\n    \"VA\": {\n        \"country\": \"VA\",\n        \"latitude\": 41.902916,\n        \"longitude\": 12.453389,\n        \"name\": \"Vatican City\"\n    },\n    \"VC\": {\n        \"country\": \"VC\",\n        \"latitude\": 12.984305,\n        \"longitude\": -61.287228,\n        \"name\": \"Saint Vincent and the Grenadines\"\n    },\n    \"VE\": {\n        \"country\": \"VE\",\n        \"latitude\": 6.42375,\n        \"longitude\": -66.58973,\n        \"name\": \"Venezuela\"\n    },\n    \"VG\": {\n        \"country\": \"VG\",\n        \"latitude\": 18.420695,\n        \"longitude\": -64.639968,\n        \"name\": \"British Virgin Islands\"\n    },\n    \"VI\": {\n        \"country\": \"VI\",\n        \"latitude\": 18.335765,\n        \"longitude\": -64.896335,\n        \"name\": \"U.S. Virgin Islands\"\n    },\n    \"VN\": {\n        \"country\": \"VN\",\n        \"latitude\": 14.058324,\n        \"longitude\": 108.277199,\n        \"name\": \"Vietnam\"\n    },\n    \"VU\": {\n        \"country\": \"VU\",\n        \"latitude\": -15.376706,\n        \"longitude\": 166.959158,\n        \"name\": \"Vanuatu\"\n    },\n    \"WF\": {\n        \"country\": \"WF\",\n        \"latitude\": -13.768752,\n        \"longitude\": -177.156097,\n        \"name\": \"Wallis and Futuna\"\n    },\n    \"WS\": {\n        \"country\": \"WS\",\n        \"latitude\": -13.759029,\n        \"longitude\": -172.104629,\n        \"name\": \"Samoa\"\n    },\n    \"XK\": {\n        \"country\": \"XK\",\n        \"latitude\": 42.602636,\n        \"longitude\": 20.902977,\n        \"name\": \"Kosovo\"\n    },\n    \"YE\": {\n        \"country\": \"YE\",\n        \"latitude\": 15.552727,\n        \"longitude\": 48.516388,\n        \"name\": \"Yemen\"\n    },\n    \"YT\": {\n        \"country\": \"YT\",\n        \"latitude\": -12.8275,\n        \"longitude\": 45.166244,\n        \"name\": \"Mayotte\"\n    },\n    \"ZA\": {\n        \"country\": \"ZA\",\n        \"latitude\": -30.559482,\n        \"longitude\": 22.937506,\n        \"name\": \"South Africa\"\n    },\n    \"ZM\": {\n        \"country\": \"ZM\",\n        \"latitude\": -13.133897,\n        \"longitude\": 27.849332,\n        \"name\": \"Zambia\"\n    },\n    \"ZW\": {\n        \"country\": \"ZW\",\n        \"latitude\": -19.015438,\n        \"longitude\": 29.154857,\n        \"name\": \"Zimbabwe\"\n    }\n}","import React from 'react';\nimport { Link } from 'react-router-dom';\n//antd\nimport { Layout, Menu, Icon, } from 'antd';\nconst { Content, Footer, Header } = Layout;\nconst { SubMenu } = Menu;\n\nexport default ({ children }) => {\n\t// const [collapsed, setCollapsed] = useState(false);\n\n\t// const onCollapse = collapsed => {\n\t// \tsetCollapsed(collapsed)\n\t// };\n\n\treturn (\n\t\t// <Layout style={{ minHeight: '100vh' }}>\n\t\t// \t<Sider collapsible collapsed={collapsed} onCollapse={onCollapse} theme='light'>\n\t\t// \t\t{/* <div style={{\n\t\t// \t\t\tbackground: 'rgba(255, 255, 255, 0.2)',\n\t\t// \t\t\theight: 32,\n\t\t// \t\t\tmargin: '16px 16px 0px 16px'\n\t\t// \t\t}}>\n\t\t// \t\t\tData Visualization\n\t\t// \t\t</div> */}\n\t\t// \t\t<Menu theme=\"light\"  mode=\"inline\">\n\t\t// \t\t\t<Menu.Item key=\"1\">\n\t\t// \t\t\t\t<Link to={`/data`}>\n\t\t// \t\t\t\t\t<Icon type=\"database\" />\n\t\t// \t\t\t\t\t<span>Data</span>\n\t\t// \t\t\t\t</Link>\n\t\t// \t\t\t</Menu.Item>\n\t\t// \t\t\t<Menu.Item key=\"2\">\n\t\t// \t\t\t\t<Link to={`/map`}>\n\t\t// \t\t\t\t\t<Icon type=\"global\" />\n\t\t// \t\t\t\t\t<span>Map</span>\n\t\t// \t\t\t\t</Link>\n\t\t// \t\t\t</Menu.Item>\n\t\t// \t\t\t<SubMenu\n\t\t// \t\t\t\tkey=\"sub1\"\n\t\t// \t\t\t\ttitle={\n\t\t// \t\t\t\t\t<span>\n\t\t// \t\t\t\t\t\t<Icon type=\"area-chart\" />\n\t\t// \t\t\t\t\t\t<span>Chart</span>\n\t\t// \t\t\t\t\t</span>\n\t\t// \t\t\t\t}\n\t\t// \t\t\t>\n\t\t// \t\t\t\t<Menu.Item key=\"3\">\n\t\t// \t\t\t\t\t<Link to={`/area-chart`}>\n\t\t// \t\t\t\t\t\tArea Chart\n\t\t// \t\t\t\t\t</Link>\n\t\t// \t\t\t\t</Menu.Item>\n\t\t// \t\t\t\t<Menu.Item key=\"4\">\n\t\t// \t\t\t\t\t<Link to={`/tree-map`}>\n\t\t// \t\t\t\t\t\tTree Map\n\t\t// \t\t\t\t\t</Link>\n\t\t// \t\t\t\t</Menu.Item>\n\t\t// \t\t\t</SubMenu>\n\t\t// \t\t</Menu>\n\t\t// \t</Sider>\n\t\t// \t<Layout>\n\t\t// \t\t<Content style={{ margin: '0 16px' }}>\n\t\t// \t\t\t<div style={{ padding: 24, background: '#fff', minHeight: 'calc(100% - 70px)' }}>{children}</div>\n\t\t// \t\t</Content>\n\t\t// \t\t<Footer style={{ textAlign: 'center' }}>Data Visualization ©2018 Created by Xuan Hien</Footer>\n\t\t// \t</Layout>\n\t\t// </Layout>\n\t\t<Layout>\n\t\t\t<Header style={{ position: 'fixed', zIndex: 1, width: '100%', background: 'transparent', padding: 0 }}>\n\t\t\t\t<div className=\"logo\" />\n\t\t\t\t<Menu mode=\"horizontal\">\n\t\t\t\t\t<Menu.Item key=\"data\">\n\t\t\t\t\t\t<Link to={`/data`}>\n\t\t\t\t\t\t\t<Icon type=\"database\" />\n\t\t\t\t\t\t\t<span>Data</span>\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t</Menu.Item>\n\t\t\t\t\t<Menu.Item key=\"map\">\n\t\t\t\t\t\t<Link to={`/map`}>\n\t\t\t\t\t\t\t<Icon type=\"global\" />\n\t\t\t\t\t\t\t<span>Map</span>\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t</Menu.Item>\n\t\t\t\t\t<SubMenu\n\t\t\t\t\t\ttitle={\n\t\t\t\t\t\t\t<span className=\"submenu-title-wrapper\">\n\t\t\t\t\t\t\t\t<Icon type=\"area-chart\" />\n\t\t\t\t\t\t\t\tChart\n            \t\t\t\t</span>\n\t\t\t\t\t\t}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Menu.Item key=\"area-chart\">\n\t\t\t\t\t\t\t<Link to={`/area-chart`}>\n\t\t\t\t\t\t\t\tArea Chart\n\t\t\t\t\t</Link>\n\t\t\t\t\t\t</Menu.Item>\n\t\t\t\t\t\t<Menu.Item key=\"tree-map\">\n\t\t\t\t\t\t\t<Link to={`/tree-map`}>\n\t\t\t\t\t\t\t\tTree Map\n\t\t\t\t\t</Link>\n\t\t\t\t\t\t</Menu.Item>\n\t\t\t\t\t</SubMenu>\n\t\t\t\t</Menu>\n\t\t\t</Header>\n\t\t\t<Content style={{ padding: '0px 16px', marginTop: 64 }}>\n\t\t\t\t<div style={{ background: '#fff', padding: 24, minHeight: 'calc(100vh - 134px)' }}>{children}</div>\n\t\t\t</Content>\n\t\t\t<Footer style={{ textAlign: 'center' }}>Data Visualization ©2019 Created by Xuan Hien</Footer>\n\t\t</Layout>\n\t)\n}","export const numberWithCommas = x => {\n    x = x.toString();\n    var pattern = /(-?\\d+)(\\d{3})/;\n    while (pattern.test(x))\n        x = x.replace(pattern, \"$1,$2\");\n    return x;\n}\n\nexport const generatorId = () => {\n    return '_' + Math.random().toString(36).substr(2, 9);\n}","import React from \"react\";\nimport { VectorMap } from \"react-jvectormap\";\nimport _ from 'lodash';\n//utils\nimport { numberWithCommas } from '../utils/number-utils';\n\nconst Map = props => {\n    const { map_data, markers } = props;\n\n    const handleClick = (e, country_code) => {\n        props.handleRegionClick(country_code);\n        setTimeout(() => { Array.from(document.getElementsByClassName(\"jvectormap-tip\")).forEach((el) => { el.style.display = 'none' }); }, 50);\n    }\n\n    return (\n        <div>\n            <VectorMap\n                map={\"world_mill\"}\n                backgroundColor=\"#505050\" //change it to ocean blue: #0077be || #505050\n                zoomOnScroll={true}\n                containerStyle={{\n                    width: \"100%\",\n                    height: \"520px\"\n                }}\n                onRegionClick={handleClick} //gets the country code\n                containerClassName=\"map\"\n                markers={markers}\n                markerStyle={\n                    {\n                        initial: {\n                            fill: 'red',\n                            stroke: '#383f47'\n                        }\n                    }\n                }\n                regionStyle={{\n                    initial: {\n                        fill: \"white\",\n                        \"fill-opacity\": 0.9,\n                        stroke: \"none\",\n                        \"stroke-width\": 0,\n                        \"stroke-opacity\": 0\n                    },\n                    hover: {\n                        \"fill-opacity\": 0.8,\n                        cursor: \"pointer\",\n                    },\n                }}\n                series={{\n                    regions: [\n                        {\n                            values: map_data,\n                            scale: ['#E1DD2E', '#44B0FE'],\n                            normalizeFunction: \"polynomial\",\n                        }\n                    ]\n                }}\n                onRegionTipShow={(e, el, code) => {\n                    if (_.isNumber(map_data[code])) {\n                        el.html(el.html() + ` (${numberWithCommas(map_data[code].toString())})`);\n                    } else {\n                        el.html(el.html() + ` (Chưa có dữ liệu)`);\n                    }\n                }}\n            />\n        </div>\n    );\n};\n\nconst areEqual = (prevProps, nextProps) => {\n    if (_.isEqual(prevProps.map_data, nextProps.map_data)) return true;\n    return false;\n}\n\nexport default React.memo(Map, areEqual);","import React, { Fragment } from 'react';\nimport {\n    PieChart, Pie, Cell,\n} from 'recharts';\n//utils\nimport { numberWithCommas } from '../utils/number-utils';\nimport { Typography, Row, Col } from 'antd';\nconst { Text } = Typography;\n\nconst COLORS = ['#E99699', '#8BB1D7'];\n\nconst RADIAN = Math.PI / 180;\n\nconst renderCustomizedLabel = ({\n    cx, cy, midAngle, innerRadius, outerRadius, percent, index,\n}) => {\n    const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\n    const x = cx + radius * Math.cos(-midAngle * RADIAN);\n    const y = cy + radius * Math.sin(-midAngle * RADIAN);\n\n    return (\n        <text x={x} y={y} fill=\"white\" textAnchor={x > cx ? 'start' : 'end'} dominantBaseline=\"central\">\n            {`${(percent * 100).toFixed(0)}%`}\n        </text>\n    );\n};\n\nconst PieInfo = ({ nation }) => {\n    return (\n        <Fragment>\n            <Col xs={8}>\n                <Text strong>Country</Text>\n            </Col>\n            <Col xs={12}>\n                <Text>{nation.location_name}</Text>\n            </Col>\n            <Col xs={8}>\n                <Text strong>Year</Text>\n            </Col>\n            <Col xs={12}>\n                <Text>{nation.year}</Text>\n            </Col>\n            <Col xs={8}>\n                <Text strong>Export</Text>\n            </Col>\n            <Col xs={12}>\n                <Text>{numberWithCommas(nation.Tong_Export)}</Text>\n            </Col>\n            <Col xs={8}>\n                <Text strong>Import</Text>\n            </Col>\n            <Col xs={12}>\n                <Text>{numberWithCommas(nation.Tong_Import)}</Text>\n            </Col>\n        </Fragment>\n    )\n}\n\nexport default (props) => {\n    const { nation } = props;\n    const data = [\n        {\n            name: 'Import',\n            value: nation.Tong_Import\n        },\n        {\n            name: 'Export',\n            value: nation.Tong_Export\n        },\n    ]\n\n    return (\n        <Row gutter={[16, 16]}>\n            <Col xs={8}>\n                <PieChart width={200} height={200}>\n                    <Pie\n                        data={data}\n                        cx={100}\n                        cy={100}\n                        labelLine={false}\n                        label={renderCustomizedLabel}\n                        outerRadius={80}\n                        fill=\"#8884d8\"\n                        dataKey=\"value\"\n                    >\n                        {\n                            data.map((entry, index) => <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />)\n                        }\n                    </Pie>\n                </PieChart>\n            </Col>\n            <Col xs={12} style={{ height: 200, display: 'flex', alignItems: 'center' }}>\n                <Row gutter={[8, 8]}>\n                    <PieInfo nation={nation} />\n                </Row>\n            </Col>\n        </Row>\n    )\n}","export default [\n    {\n        \"code\": \"AD\",\n        \"name\": \"Andorra\"\n    },\n    {\n        \"code\": \"AE\",\n        \"name\": \"United Arab Emirates\"\n    },\n    {\n        \"code\": \"AF\",\n        \"name\": \"Afghanistan\"\n    },\n    {\n        \"code\": \"AG\",\n        \"name\": \"Antigua and Barbuda\"\n    },\n    {\n        \"code\": \"AI\",\n        \"name\": \"Anguilla\"\n    },\n    {\n        \"code\": \"AL\",\n        \"name\": \"Albania\"\n    },\n    {\n        \"code\": \"AM\",\n        \"name\": \"Armenia\"\n    },\n    {\n        \"code\": \"AO\",\n        \"name\": \"Angola\"\n    },\n    {\n        \"code\": \"AQ\",\n        \"name\": \"Antarctica\"\n    },\n    {\n        \"code\": \"AR\",\n        \"name\": \"Argentina\"\n    },\n    {\n        \"code\": \"AS\",\n        \"name\": \"American Samoa\"\n    },\n    {\n        \"code\": \"AT\",\n        \"name\": \"Austria\"\n    },\n    {\n        \"code\": \"AU\",\n        \"name\": \"Australia\"\n    },\n    {\n        \"code\": \"AW\",\n        \"name\": \"Aruba\"\n    },\n    {\n        \"code\": \"AX\",\n        \"name\": \"Åland Islands\"\n    },\n    {\n        \"code\": \"AZ\",\n        \"name\": \"Azerbaijan\"\n    },\n    {\n        \"code\": \"BA\",\n        \"name\": \"Bosnia and Herzegovina\"\n    },\n    {\n        \"code\": \"BB\",\n        \"name\": \"Barbados\"\n    },\n    {\n        \"code\": \"BD\",\n        \"name\": \"Bangladesh\"\n    },\n    {\n        \"code\": \"BE\",\n        \"name\": \"Belgium\"\n    },\n    {\n        \"code\": \"BF\",\n        \"name\": \"Burkina Faso\"\n    },\n    {\n        \"code\": \"BG\",\n        \"name\": \"Bulgaria\"\n    },\n    {\n        \"code\": \"BH\",\n        \"name\": \"Bahrain\"\n    },\n    {\n        \"code\": \"BI\",\n        \"name\": \"Burundi\"\n    },\n    {\n        \"code\": \"BJ\",\n        \"name\": \"Benin\"\n    },\n    {\n        \"code\": \"BL\",\n        \"name\": \"Saint Barthélemy\"\n    },\n    {\n        \"code\": \"BM\",\n        \"name\": \"Bermuda\"\n    },\n    {\n        \"code\": \"BN\",\n        \"name\": \"Brunei Darussalam\"\n    },\n    {\n        \"code\": \"BO\",\n        \"name\": \"Bolivia, Plurinational State of\"\n    },\n    {\n        \"code\": \"BQ\",\n        \"name\": \"Bonaire, Sint Eustatius and Saba\"\n    },\n    {\n        \"code\": \"BR\",\n        \"name\": \"Brazil\"\n    },\n    {\n        \"code\": \"BS\",\n        \"name\": \"Bahamas\"\n    },\n    {\n        \"code\": \"BT\",\n        \"name\": \"Bhutan\"\n    },\n    {\n        \"code\": \"BV\",\n        \"name\": \"Bouvet Island\"\n    },\n    {\n        \"code\": \"BW\",\n        \"name\": \"Botswana\"\n    },\n    {\n        \"code\": \"BY\",\n        \"name\": \"Belarus\"\n    },\n    {\n        \"code\": \"BZ\",\n        \"name\": \"Belize\"\n    },\n    {\n        \"code\": \"CA\",\n        \"name\": \"Canada\"\n    },\n    {\n        \"code\": \"CC\",\n        \"name\": \"Cocos (Keeling) Islands\"\n    },\n    {\n        \"code\": \"CD\",\n        \"name\": \"Congo, Democratic Republic of the\"\n    },\n    {\n        \"code\": \"CF\",\n        \"name\": \"Central African Republic\"\n    },\n    {\n        \"code\": \"CG\",\n        \"name\": \"Congo\"\n    },\n    {\n        \"code\": \"CH\",\n        \"name\": \"Switzerland\"\n    },\n    {\n        \"code\": \"CI\",\n        \"name\": \"Côte d'Ivoire\"\n    },\n    {\n        \"code\": \"CK\",\n        \"name\": \"Cook Islands\"\n    },\n    {\n        \"code\": \"CL\",\n        \"name\": \"Chile\"\n    },\n    {\n        \"code\": \"CM\",\n        \"name\": \"Cameroon\"\n    },\n    {\n        \"code\": \"CN\",\n        \"name\": \"China\"\n    },\n    {\n        \"code\": \"CO\",\n        \"name\": \"Colombia\"\n    },\n    {\n        \"code\": \"CR\",\n        \"name\": \"Costa Rica\"\n    },\n    {\n        \"code\": \"CU\",\n        \"name\": \"Cuba\"\n    },\n    {\n        \"code\": \"CV\",\n        \"name\": \"Cabo Verde\"\n    },\n    {\n        \"code\": \"CW\",\n        \"name\": \"Curaçao\"\n    },\n    {\n        \"code\": \"CX\",\n        \"name\": \"Christmas Island\"\n    },\n    {\n        \"code\": \"CY\",\n        \"name\": \"Cyprus\"\n    },\n    {\n        \"code\": \"CZ\",\n        \"name\": \"Czechia\"\n    },\n    {\n        \"code\": \"DE\",\n        \"name\": \"Germany\"\n    },\n    {\n        \"code\": \"DJ\",\n        \"name\": \"Djibouti\"\n    },\n    {\n        \"code\": \"DK\",\n        \"name\": \"Denmark\"\n    },\n    {\n        \"code\": \"DM\",\n        \"name\": \"Dominica\"\n    },\n    {\n        \"code\": \"DO\",\n        \"name\": \"Dominican Republic\"\n    },\n    {\n        \"code\": \"DZ\",\n        \"name\": \"Algeria\"\n    },\n    {\n        \"code\": \"EC\",\n        \"name\": \"Ecuador\"\n    },\n    {\n        \"code\": \"EE\",\n        \"name\": \"Estonia\"\n    },\n    {\n        \"code\": \"EG\",\n        \"name\": \"Egypt\"\n    },\n    {\n        \"code\": \"EH\",\n        \"name\": \"Western Sahara\"\n    },\n    {\n        \"code\": \"ER\",\n        \"name\": \"Eritrea\"\n    },\n    {\n        \"code\": \"ES\",\n        \"name\": \"Spain\"\n    },\n    {\n        \"code\": \"ET\",\n        \"name\": \"Ethiopia\"\n    },\n    {\n        \"code\": \"FI\",\n        \"name\": \"Finland\"\n    },\n    {\n        \"code\": \"FJ\",\n        \"name\": \"Fiji\"\n    },\n    {\n        \"code\": \"FK\",\n        \"name\": \"Falkland Islands (Malvinas)\"\n    },\n    {\n        \"code\": \"FM\",\n        \"name\": \"Micronesia, Federated States of\"\n    },\n    {\n        \"code\": \"FO\",\n        \"name\": \"Faroe Islands\"\n    },\n    {\n        \"code\": \"FR\",\n        \"name\": \"France\"\n    },\n    {\n        \"code\": \"GA\",\n        \"name\": \"Gabon\"\n    },\n    {\n        \"code\": \"GB\",\n        \"name\": \"United Kingdom of Great Britain and Northern Ireland\"\n    },\n    {\n        \"code\": \"GD\",\n        \"name\": \"Grenada\"\n    },\n    {\n        \"code\": \"GE\",\n        \"name\": \"Georgia\"\n    },\n    {\n        \"code\": \"GF\",\n        \"name\": \"French Guiana\"\n    },\n    {\n        \"code\": \"GG\",\n        \"name\": \"Guernsey\"\n    },\n    {\n        \"code\": \"GH\",\n        \"name\": \"Ghana\"\n    },\n    {\n        \"code\": \"GI\",\n        \"name\": \"Gibraltar\"\n    },\n    {\n        \"code\": \"GL\",\n        \"name\": \"Greenland\"\n    },\n    {\n        \"code\": \"GM\",\n        \"name\": \"Gambia\"\n    },\n    {\n        \"code\": \"GN\",\n        \"name\": \"Guinea\"\n    },\n    {\n        \"code\": \"GP\",\n        \"name\": \"Guadeloupe\"\n    },\n    {\n        \"code\": \"GQ\",\n        \"name\": \"Equatorial Guinea\"\n    },\n    {\n        \"code\": \"GR\",\n        \"name\": \"Greece\"\n    },\n    {\n        \"code\": \"GS\",\n        \"name\": \"South Georgia and the South Sandwich Islands\"\n    },\n    {\n        \"code\": \"GT\",\n        \"name\": \"Guatemala\"\n    },\n    {\n        \"code\": \"GU\",\n        \"name\": \"Guam\"\n    },\n    {\n        \"code\": \"GW\",\n        \"name\": \"Guinea-Bissau\"\n    },\n    {\n        \"code\": \"GY\",\n        \"name\": \"Guyana\"\n    },\n    {\n        \"code\": \"HK\",\n        \"name\": \"Hong Kong\"\n    },\n    {\n        \"code\": \"HM\",\n        \"name\": \"Heard Island and McDonald Islands\"\n    },\n    {\n        \"code\": \"HN\",\n        \"name\": \"Honduras\"\n    },\n    {\n        \"code\": \"HR\",\n        \"name\": \"Croatia\"\n    },\n    {\n        \"code\": \"HT\",\n        \"name\": \"Haiti\"\n    },\n    {\n        \"code\": \"HU\",\n        \"name\": \"Hungary\"\n    },\n    {\n        \"code\": \"ID\",\n        \"name\": \"Indonesia\"\n    },\n    {\n        \"code\": \"IE\",\n        \"name\": \"Ireland\"\n    },\n    {\n        \"code\": \"IL\",\n        \"name\": \"Israel\"\n    },\n    {\n        \"code\": \"IM\",\n        \"name\": \"Isle of Man\"\n    },\n    {\n        \"code\": \"IN\",\n        \"name\": \"India\"\n    },\n    {\n        \"code\": \"IO\",\n        \"name\": \"British Indian Ocean Territory\"\n    },\n    {\n        \"code\": \"IQ\",\n        \"name\": \"Iraq\"\n    },\n    {\n        \"code\": \"IR\",\n        \"name\": \"Iran, Islamic Republic of\"\n    },\n    {\n        \"code\": \"IS\",\n        \"name\": \"Iceland\"\n    },\n    {\n        \"code\": \"IT\",\n        \"name\": \"Italy\"\n    },\n    {\n        \"code\": \"JE\",\n        \"name\": \"Jersey\"\n    },\n    {\n        \"code\": \"JM\",\n        \"name\": \"Jamaica\"\n    },\n    {\n        \"code\": \"JO\",\n        \"name\": \"Jordan\"\n    },\n    {\n        \"code\": \"JP\",\n        \"name\": \"Japan\"\n    },\n    {\n        \"code\": \"KE\",\n        \"name\": \"Kenya\"\n    },\n    {\n        \"code\": \"KG\",\n        \"name\": \"Kyrgyzstan\"\n    },\n    {\n        \"code\": \"KH\",\n        \"name\": \"Cambodia\"\n    },\n    {\n        \"code\": \"KI\",\n        \"name\": \"Kiribati\"\n    },\n    {\n        \"code\": \"KM\",\n        \"name\": \"Comoros\"\n    },\n    {\n        \"code\": \"KN\",\n        \"name\": \"Saint Kitts and Nevis\"\n    },\n    {\n        \"code\": \"KP\",\n        \"name\": \"Korea, Democratic People's Republic of\"\n    },\n    {\n        \"code\": \"KR\",\n        \"name\": \"Korea, Republic of\"\n    },\n    {\n        \"code\": \"KW\",\n        \"name\": \"Kuwait\"\n    },\n    {\n        \"code\": \"KY\",\n        \"name\": \"Cayman Islands\"\n    },\n    {\n        \"code\": \"KZ\",\n        \"name\": \"Kazakhstan\"\n    },\n    {\n        \"code\": \"LA\",\n        \"name\": \"Lao People's Democratic Republic\"\n    },\n    {\n        \"code\": \"LB\",\n        \"name\": \"Lebanon\"\n    },\n    {\n        \"code\": \"LC\",\n        \"name\": \"Saint Lucia\"\n    },\n    {\n        \"code\": \"LI\",\n        \"name\": \"Liechtenstein\"\n    },\n    {\n        \"code\": \"LK\",\n        \"name\": \"Sri Lanka\"\n    },\n    {\n        \"code\": \"LR\",\n        \"name\": \"Liberia\"\n    },\n    {\n        \"code\": \"LS\",\n        \"name\": \"Lesotho\"\n    },\n    {\n        \"code\": \"LT\",\n        \"name\": \"Lithuania\"\n    },\n    {\n        \"code\": \"LU\",\n        \"name\": \"Luxembourg\"\n    },\n    {\n        \"code\": \"LV\",\n        \"name\": \"Latvia\"\n    },\n    {\n        \"code\": \"LY\",\n        \"name\": \"Libya\"\n    },\n    {\n        \"code\": \"MA\",\n        \"name\": \"Morocco\"\n    },\n    {\n        \"code\": \"MC\",\n        \"name\": \"Monaco\"\n    },\n    {\n        \"code\": \"MD\",\n        \"name\": \"Moldova, Republic of\"\n    },\n    {\n        \"code\": \"ME\",\n        \"name\": \"Montenegro\"\n    },\n    {\n        \"code\": \"MF\",\n        \"name\": \"Saint Martin, (French part)\"\n    },\n    {\n        \"code\": \"MG\",\n        \"name\": \"Madagascar\"\n    },\n    {\n        \"code\": \"MH\",\n        \"name\": \"Marshall Islands\"\n    },\n    {\n        \"code\": \"MK\",\n        \"name\": \"North Macedonia\"\n    },\n    {\n        \"code\": \"ML\",\n        \"name\": \"Mali\"\n    },\n    {\n        \"code\": \"MM\",\n        \"name\": \"Myanmar\"\n    },\n    {\n        \"code\": \"MN\",\n        \"name\": \"Mongolia\"\n    },\n    {\n        \"code\": \"MO\",\n        \"name\": \"Macao\"\n    },\n    {\n        \"code\": \"MP\",\n        \"name\": \"Northern Mariana Islands\"\n    },\n    {\n        \"code\": \"MQ\",\n        \"name\": \"Martinique\"\n    },\n    {\n        \"code\": \"MR\",\n        \"name\": \"Mauritania\"\n    },\n    {\n        \"code\": \"MS\",\n        \"name\": \"Montserrat\"\n    },\n    {\n        \"code\": \"MT\",\n        \"name\": \"Malta\"\n    },\n    {\n        \"code\": \"MU\",\n        \"name\": \"Mauritius\"\n    },\n    {\n        \"code\": \"MV\",\n        \"name\": \"Maldives\"\n    },\n    {\n        \"code\": \"MW\",\n        \"name\": \"Malawi\"\n    },\n    {\n        \"code\": \"MX\",\n        \"name\": \"Mexico\"\n    },\n    {\n        \"code\": \"MY\",\n        \"name\": \"Malaysia\"\n    },\n    {\n        \"code\": \"MZ\",\n        \"name\": \"Mozambique\"\n    },\n    {\n        \"code\": \"NA\",\n        \"name\": \"Namibia\"\n    },\n    {\n        \"code\": \"NC\",\n        \"name\": \"New Caledonia\"\n    },\n    {\n        \"code\": \"NE\",\n        \"name\": \"Niger\"\n    },\n    {\n        \"code\": \"NF\",\n        \"name\": \"Norfolk Island\"\n    },\n    {\n        \"code\": \"NG\",\n        \"name\": \"Nigeria\"\n    },\n    {\n        \"code\": \"NI\",\n        \"name\": \"Nicaragua\"\n    },\n    {\n        \"code\": \"NL\",\n        \"name\": \"Netherlands\"\n    },\n    {\n        \"code\": \"NO\",\n        \"name\": \"Norway\"\n    },\n    {\n        \"code\": \"NP\",\n        \"name\": \"Nepal\"\n    },\n    {\n        \"code\": \"NR\",\n        \"name\": \"Nauru\"\n    },\n    {\n        \"code\": \"NU\",\n        \"name\": \"Niue\"\n    },\n    {\n        \"code\": \"NZ\",\n        \"name\": \"New Zealand\"\n    },\n    {\n        \"code\": \"OM\",\n        \"name\": \"Oman\"\n    },\n    {\n        \"code\": \"PA\",\n        \"name\": \"Panama\"\n    },\n    {\n        \"code\": \"PE\",\n        \"name\": \"Peru\"\n    },\n    {\n        \"code\": \"PF\",\n        \"name\": \"French Polynesia\"\n    },\n    {\n        \"code\": \"PG\",\n        \"name\": \"Papua New Guinea\"\n    },\n    {\n        \"code\": \"PH\",\n        \"name\": \"Philippines\"\n    },\n    {\n        \"code\": \"PK\",\n        \"name\": \"Pakistan\"\n    },\n    {\n        \"code\": \"PL\",\n        \"name\": \"Poland\"\n    },\n    {\n        \"code\": \"PM\",\n        \"name\": \"Saint Pierre and Miquelon\"\n    },\n    {\n        \"code\": \"PN\",\n        \"name\": \"Pitcairn\"\n    },\n    {\n        \"code\": \"PR\",\n        \"name\": \"Puerto Rico\"\n    },\n    {\n        \"code\": \"PS\",\n        \"name\": \"Palestine, State of\"\n    },\n    {\n        \"code\": \"PT\",\n        \"name\": \"Portugal\"\n    },\n    {\n        \"code\": \"PW\",\n        \"name\": \"Palau\"\n    },\n    {\n        \"code\": \"PY\",\n        \"name\": \"Paraguay\"\n    },\n    {\n        \"code\": \"QA\",\n        \"name\": \"Qatar\"\n    },\n    {\n        \"code\": \"RE\",\n        \"name\": \"Réunion\"\n    },\n    {\n        \"code\": \"RO\",\n        \"name\": \"Romania\"\n    },\n    {\n        \"code\": \"RS\",\n        \"name\": \"Serbia\"\n    },\n    {\n        \"code\": \"RU\",\n        \"name\": \"Russian Federation\"\n    },\n    {\n        \"code\": \"RW\",\n        \"name\": \"Rwanda\"\n    },\n    {\n        \"code\": \"SA\",\n        \"name\": \"Saudi Arabia\"\n    },\n    {\n        \"code\": \"SB\",\n        \"name\": \"Solomon Islands\"\n    },\n    {\n        \"code\": \"SC\",\n        \"name\": \"Seychelles\"\n    },\n    {\n        \"code\": \"SD\",\n        \"name\": \"Sudan\"\n    },\n    {\n        \"code\": \"SE\",\n        \"name\": \"Sweden\"\n    },\n    {\n        \"code\": \"SG\",\n        \"name\": \"Singapore\"\n    },\n    {\n        \"code\": \"SH\",\n        \"name\": \"Saint Helena, Ascension and Tristan da Cunha\"\n    },\n    {\n        \"code\": \"SI\",\n        \"name\": \"Slovenia\"\n    },\n    {\n        \"code\": \"SJ\",\n        \"name\": \"Svalbard and Jan Mayen\"\n    },\n    {\n        \"code\": \"SK\",\n        \"name\": \"Slovakia\"\n    },\n    {\n        \"code\": \"SL\",\n        \"name\": \"Sierra Leone\"\n    },\n    {\n        \"code\": \"SM\",\n        \"name\": \"San Marino\"\n    },\n    {\n        \"code\": \"SN\",\n        \"name\": \"Senegal\"\n    },\n    {\n        \"code\": \"SO\",\n        \"name\": \"Somalia\"\n    },\n    {\n        \"code\": \"SR\",\n        \"name\": \"Suriname\"\n    },\n    {\n        \"code\": \"SS\",\n        \"name\": \"South Sudan\"\n    },\n    {\n        \"code\": \"ST\",\n        \"name\": \"Sao Tome and Principe\"\n    },\n    {\n        \"code\": \"SV\",\n        \"name\": \"El Salvador\"\n    },\n    {\n        \"code\": \"SX\",\n        \"name\": \"Sint Maarten, (Dutch part)\"\n    },\n    {\n        \"code\": \"SY\",\n        \"name\": \"Syrian Arab Republic\"\n    },\n    {\n        \"code\": \"SZ\",\n        \"name\": \"Eswatini\"\n    },\n    {\n        \"code\": \"TC\",\n        \"name\": \"Turks and Caicos Islands\"\n    },\n    {\n        \"code\": \"TD\",\n        \"name\": \"Chad\"\n    },\n    {\n        \"code\": \"TF\",\n        \"name\": \"French Southern Territories\"\n    },\n    {\n        \"code\": \"TG\",\n        \"name\": \"Togo\"\n    },\n    {\n        \"code\": \"TH\",\n        \"name\": \"Thailand\"\n    },\n    {\n        \"code\": \"TJ\",\n        \"name\": \"Tajikistan\"\n    },\n    {\n        \"code\": \"TK\",\n        \"name\": \"Tokelau\"\n    },\n    {\n        \"code\": \"TL\",\n        \"name\": \"Timor-Leste\"\n    },\n    {\n        \"code\": \"TM\",\n        \"name\": \"Turkmenistan\"\n    },\n    {\n        \"code\": \"TN\",\n        \"name\": \"Tunisia\"\n    },\n    {\n        \"code\": \"TO\",\n        \"name\": \"Tonga\"\n    },\n    {\n        \"code\": \"TR\",\n        \"name\": \"Turkey\"\n    },\n    {\n        \"code\": \"TT\",\n        \"name\": \"Trinidad and Tobago\"\n    },\n    {\n        \"code\": \"TV\",\n        \"name\": \"Tuvalu\"\n    },\n    {\n        \"code\": \"TW\",\n        \"name\": \"Taiwan, Province of China\"\n    },\n    {\n        \"code\": \"TZ\",\n        \"name\": \"Tanzania, United Republic of\"\n    },\n    {\n        \"code\": \"UA\",\n        \"name\": \"Ukraine\"\n    },\n    {\n        \"code\": \"UG\",\n        \"name\": \"Uganda\"\n    },\n    {\n        \"code\": \"UM\",\n        \"name\": \"United States Minor Outlying Islands\"\n    },\n    {\n        \"code\": \"US\",\n        \"name\": \"United States of America\"\n    },\n    {\n        \"code\": \"UY\",\n        \"name\": \"Uruguay\"\n    },\n    {\n        \"code\": \"UZ\",\n        \"name\": \"Uzbekistan\"\n    },\n    {\n        \"code\": \"VA\",\n        \"name\": \"Holy See\"\n    },\n    {\n        \"code\": \"VC\",\n        \"name\": \"Saint Vincent and the Grenadines\"\n    },\n    {\n        \"code\": \"VE\",\n        \"name\": \"Venezuela, Bolivarian Republic of\"\n    },\n    {\n        \"code\": \"VG\",\n        \"name\": \"Virgin Islands, British\"\n    },\n    {\n        \"code\": \"VI\",\n        \"name\": \"Virgin Islands, U.S.\"\n    },\n    {\n        \"code\": \"VN\",\n        \"name\": \"Viet Nam\"\n    },\n    {\n        \"code\": \"VU\",\n        \"name\": \"Vanuatu\"\n    },\n    {\n        \"code\": \"WF\",\n        \"name\": \"Wallis and Futuna\"\n    },\n    {\n        \"code\": \"WS\",\n        \"name\": \"Samoa\"\n    },\n    {\n        \"code\": \"YE\",\n        \"name\": \"Yemen\"\n    },\n    {\n        \"code\": \"YT\",\n        \"name\": \"Mayotte\"\n    },\n    {\n        \"code\": \"ZA\",\n        \"name\": \"South Africa\"\n    },\n    {\n        \"code\": \"ZM\",\n        \"name\": \"Zambia\"\n    },\n    {\n        \"code\": \"ZW\",\n        \"name\": \"Zimbabwe\"\n    }\n]","import React from 'react';\n//constants\nimport country_code_iso2_data from '../constants/country_code';\n//lib\nimport getCountryISO3 from 'country-iso-2-to-3';\n//antd\nimport { Select, } from 'antd';\nconst { Option } = Select;\n\nconst SelectCoutry = (props) => {\n    const { setCountryCodeIso2, country_code_iso2 } = props;\n    \n    const handleChange = (val) => {\n        setCountryCodeIso2(val)\n    }\n\n    return (\n        <Select\n            showSearch\n            style={{ width: '100%' }}\n            placeholder=\"Choose country\"\n            optionFilterProp=\"children\"\n            onChange={handleChange}\n            value={country_code_iso2}\n            filterOption={(input, option) =>\n                option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n            }\n        >\n            {\n                country_code_iso2_data.map(item => {\n                    const { code, name } = item;\n                    return (\n                        <Option value={code} key={code}>{`${name}(${getCountryISO3(code)})`}</Option>\n                    )\n                })\n            }\n        </Select>\n    )\n}\n\nexport default React.memo(SelectCoutry)","import React, { useState } from 'react';\n//redux\nimport { useSelector } from 'react-redux';\n//country code\nimport country_geocode from '../constants/country_geocode';\n//lib\nimport _ from 'lodash';\n//component\nimport Background from '../components/Background';\nimport Map from '../components/Map';\nimport PieChart from '../components/PieChart';\nimport SelectCountry from '../components/SelectCountry';\n//antd\nimport { Row, Col, Select, Typography, Button, Radio, message } from 'antd';\nconst { Option } = Select;\nconst { Text } = Typography;\n\n/* #region  init select year option */\nconst createYear = () => {\n    let select = [];\n    for (let i = 2017; i > 1961; i--) {\n        const val = i;\n        select.push(\n            <Option value={val} key={val}>{val}</Option>\n        )\n    }\n    return select;\n}\n/* #endregion */\n\n/* #region  radio style */\nconst radioStyle = {\n    display: 'block',\n    height: '30px',\n    lineHeight: '30px',\n}\n/* #endregion */\n\n/* #region  message */\nconst success = () => {\n    message.success('Lấy dữ liệu thành công', 2);\n};\n\nconst warning = () => {\n    message.warning('Chưa có dữ liệu cho quốc gia này', 2);\n};\n/* #endregion */\n\nconst Home = () => {\n    /* #region  init */\n    const [country_code_iso2, setCountryCodeIso2] = useState(undefined);\n    const [year, setYear] = useState(undefined);\n    const [view_type, setViewType] = useState('Tong_Export');\n    const [map_data, setMapData] = useState([]);\n    const [markers, setMarkers] = useState([]);\n    const [nation, setNation] = useState(undefined);\n    const [nation_other, setNationOther] = useState(undefined);\n    const [view_detail, setViewDetail] = useState(false);\n    const data_reducer = useSelector(state => state.data_reducer);\n    const partner_year_data = data_reducer.partner_year_data;\n    const sum_balance_data = data_reducer.sum_balance_data;\n    /* #endregion */\n\n    /* #region  process data */\n    const filterDataByYear = year => {\n        try {\n            // setDataByYear(_.keyBy(partner_year_data.filter(item => item.year === year), 'country_code_iso2'))\n        } catch (error) {\n        }\n    }\n\n    const processData = () => {\n        try {\n            setNationOther(undefined);\n            setMapData(undefined);\n            setViewDetail(false);\n            let map_data_result = {};\n            const data_filter_year_coutry = partner_year_data.filter(item => (item.year === year && item.country_code_iso2 === country_code_iso2));\n            if (!_.isEmpty(data_filter_year_coutry)) {\n                data_filter_year_coutry.map(item => {\n                    map_data_result[item.partner_code_ios2] = view_type === 'Tong_Export' ? item.Tong_Export : item.Tong_Import;\n                })\n                const nation = country_geocode[country_code_iso2];\n                if (!_.isEmpty(nation)) {\n                    setMarkers([{\n                        latLng: [nation.latitude, nation.longitude], name: nation.name\n                    }]);\n                    const current_nation = sum_balance_data.filter(item => (item.year === year && item.country_code_iso2 === country_code_iso2));\n                    if (!_.isEmpty(current_nation)) {\n                        setNation(current_nation[0]);\n                    }\n                }\n                setMapData(map_data_result);\n                success();\n            } else {\n                warning();\n            }\n        } catch (error) {\n        }\n    }\n    /* #endregion */\n\n    /* #region  handle change select */\n    const handleChangeYear = (val) => {\n        setYear(val);\n        filterDataByYear(val);\n    }\n    /* #endregion */\n\n    /* #region   */\n    const handleRegionClick = (country_code_iso2) => {\n        const current_nation = sum_balance_data.filter(item => (item.year === year && item.country_code_iso2 === country_code_iso2));\n        if (!_.isEmpty(current_nation)) {\n            setNationOther(current_nation[0]);\n        } else {\n            warning();\n        }\n    }\n    /* #endregion */\n\n    const handleViewDetail = () => {\n        setViewDetail(true);\n    }\n\n    return (\n        <Background key=\"Home\">\n            <Row gutter={[16, 16]}>\n                {/*start render map */}\n                <Col xs={18}>\n                    <Map handleRegionClick={handleRegionClick} map_data={map_data} markers={markers} />\n                    <br />\n                    <div style={{ height: 20, width: '100%', background: 'linear-gradient(to right, #e1dd2e 0%, #44b0fe 100%)' }} />\n                </Col>\n                {/* end render map */}\n                {/* start render select */}\n                <Col xs={6}>\n                    <Row gutter={[16, 16]} >\n                        <Col xs={24}>\n                            <Text strong>Country</Text>\n                            <br />\n                            <SelectCountry setCountryCodeIso2={setCountryCodeIso2} country_code_iso2={country_code_iso2} />\n                        </Col>\n                        <Col xs={24}>\n                            <Text strong>Year</Text>\n                            <br />\n                            <Select\n                                showSearch\n                                style={{ width: '100%' }}\n                                placeholder=\"Choose year\"\n                                optionFilterProp=\"children\"\n                                onChange={handleChangeYear}\n                                value={year}\n                                filterOption={(input, option) =>\n                                    option.props.children.toString().toLowerCase().indexOf(input.toString().toLowerCase()) >= 0\n                                }\n                            >\n                                {createYear()}\n                            </Select>\n                        </Col>\n                        <Col xs={24}>\n                            <Radio.Group value={view_type} onChange={e => setViewType(e.target.value)}>\n                                <Radio style={radioStyle} value={'Tong_Export'}>Export</Radio>\n                                <Radio style={radioStyle} value={'Tong_Import'}>Import</Radio>\n                            </Radio.Group>\n                        </Col>\n                        <Col xs={24}>\n                            <Button type='primary' onClick={processData}>Apply</Button>\n                            <Button type='primary' style={{ marginLeft: 8 }} onClick={handleViewDetail}>Detail</Button>\n                        </Col>\n                    </Row>\n                </Col>\n                {/* end render select */}\n                {\n                    (view_detail && !_.isEmpty(nation_other)) &&\n                    <Col xs={18}>\n                        <PieChart nation={nation_other} />\n                    </Col>\n                }\n                {\n                    (view_detail && !_.isEmpty(nation)) &&\n                    <Col xs={18}>\n                        <PieChart nation={nation} />\n                    </Col>\n                }\n                {\n                    (view_detail && !_.isEmpty(nation)) &&\n                    <Col xs={18}>\n                        <div style={{ display: 'flex', alignItems: 'center', flexDirection: 'row' }}>\n                            <div style={{ height: 30, width: 50, backgroundColor: '#E99699', marginRight: 10 }} />\n                            <Text>Import</Text>\n                        </div>\n                        <br />\n                        <div style={{ display: 'flex', alignItems: 'center', flexDirection: 'row' }}>\n                            <div style={{ height: 30, width: 50, backgroundColor: '#8BB1D7', marginRight: 10 }} />\n                            <Text>Export</Text>\n                        </div>\n                    </Col>\n                }\n            </Row>\n        </Background>\n    )\n}\n\nexport default Home;\n","import React, { useState } from 'react';\n//redux\nimport { useSelector } from 'react-redux';\n//lib\nimport Immutable from 'seamless-immutable';\n//constants\nimport country_code from '../constants/country_code';\n//component\nimport Background from '../components/Background';\n//utils\nimport { numberWithCommas } from '../utils/number-utils';\n//antd\nimport { Row, Col, Select, Typography } from 'antd';\nimport { Table } from 'antd';\nconst { Text } = Typography;\nconst { Option } = Select;\n\nconst getYearFilterData = () => {\n    let data = [];\n    for (let i = 1962; i <= 2017; i++) {\n        data = [...data, { text: i, value: i }]\n    }\n    return data;\n}\n\nconst getCoutryFilterData = () => {\n    let data = [];\n    country_code.map(item => {\n        data = [...data, { text: item.name, value: item.name }]\n        return {};\n    })\n    return data;\n}\n\nconst columns_balance = [\n    {\n        title: 'No',\n        dataIndex: 'STT',\n    },\n    {\n        title: 'Year',\n        dataIndex: 'year',\n        filters: getYearFilterData(),\n        onFilter: (value, record) => record.year === value,\n        sorter: (a, b) => a.year - b.year,\n        ellipsis: true\n    },\n    {\n        title: 'Location code',\n        dataIndex: 'location_code',\n    },\n    {\n        title: 'Location name',\n        dataIndex: 'location_name',\n        filters: getCoutryFilterData(),\n        onFilter: (value, record) => record.location_name.includes(value),\n    },\n    {\n        title: 'Import',\n        dataIndex: 'Tong_Import',\n        render: val => <span>{numberWithCommas(val)}</span>,\n        sorter: (a, b) => a.Tong_Import - b.Tong_Import,\n    },\n    {\n        title: 'Export',\n        dataIndex: 'Tong_Export',\n        render: val => <span>{numberWithCommas(val)}</span>,\n        sorter: (a, b) => a.Tong_Export - b.Tong_Export,\n    },\n    {\n        title: 'Balance',\n        dataIndex: 'Balance',\n        render: val => <span>{numberWithCommas(val)}</span>,\n        sorter: (a, b) => a.Balance - b.Balance,\n    },\n];\n\nconst columns_partner = [\n    {\n        title: 'No',\n        dataIndex: 'STT',\n        key: 'STT',\n    },\n    {\n        title: 'Year',\n        dataIndex: 'year',\n        key: 'year',\n        filters: getYearFilterData(),\n        onFilter: (value, record) => record.year === value,\n        sorter: (a, b) => a.year - b.year,\n    },\n    {\n        title: 'Location code',\n        dataIndex: 'location_code',\n        key: 'location_code',\n    },\n    {\n        title: 'Location name',\n        dataIndex: 'location_name',\n        filters: getCoutryFilterData(),\n        onFilter: (value, record) => record.location_name.includes(value),\n    },\n    {\n        title: 'Partner code',\n        dataIndex: 'partner_code',\n        key: 'partner_code',\n    },\n    {\n        title: 'Import',\n        dataIndex: 'Tong_Import',\n        key: 'Tong_Import',\n        render: val => <span>{numberWithCommas(val)}</span>,\n        sorter: (a, b) => a.Tong_Import - b.Tong_Import,\n    },\n    {\n        title: 'Export',\n        dataIndex: 'Tong_Export',\n        key: 'Tong_Export',\n        render: val => <span>{numberWithCommas(val)}</span>,\n        sorter: (a, b) => a.Tong_Export - b.Tong_Export,\n    },\n];\n\nconst columns_percent = [\n    {\n        title: 'No',\n        dataIndex: 'STT',\n        key: 'STT',\n    },\n    {\n        title: 'Year',\n        dataIndex: 'year',\n        key: 'year',\n        filters: getYearFilterData(),\n        onFilter: (value, record) => record.year === value,\n        sorter: (a, b) => a.year - b.year,\n    },\n    {\n        title: 'Location code',\n        dataIndex: 'location_code',\n        key: 'location_code',\n    },\n    {\n        title: 'Location name',\n        dataIndex: 'location_name',\n        filters: getCoutryFilterData(),\n        onFilter: (value, record) => record.location_name.includes(value),\n    },\n    {\n        title: 'Session name',\n        dataIndex: 'Session_name',\n        key: 'Session_name',\n    },\n    {\n        title: 'Sum import',\n        dataIndex: 'SumImport',\n        key: 'SumImport',\n        render: val => <span>{numberWithCommas(val)}</span>,\n        sorter: (a, b) => a.SumImport - b.SumImport,\n    },\n    {\n        title: 'Sum export',\n        dataIndex: 'SumExport',\n        key: 'SumExport',\n        render: val => <span>{numberWithCommas(val)}</span>,\n        sorter: (a, b) => a.SumExport - b.SumExport,\n    },\n    {\n        title: 'Percent session import',\n        dataIndex: 'Percent_Session_Im',\n        key: 'Percent_Session_Im',\n        render: val => <span>{`${val}%`}</span>,\n        sorter: (a, b) => a.Percent_Session_Im - b.Percent_Session_Im,\n    },\n    {\n        title: 'Percent import',\n        dataIndex: 'PercentIm',\n        key: 'PercentIm',\n        render: val => <span>{`${val}%`}</span>,\n        sorter: (a, b) => a.PercentIm - b.PercentIm,\n    },\n    {\n        title: 'Percent session export',\n        dataIndex: 'Percent_Session_Ex',\n        key: 'Percent_Session_Ex',\n        render: val => <span>{`${val}%`}</span>,\n        sorter: (a, b) => a.Percent_Session_Ex - b.Percent_Session_Ex,\n    },\n    {\n        title: 'Percent export',\n        dataIndex: 'PercentEx',\n        key: 'PercentEx',\n        render: val => <span>{`${val}%`}</span>,\n        sorter: (a, b) => a.PercentEx - b.PercentEx,\n    },\n]\n\nexport default () => {\n    /* #region  init */\n    const [file, setFile] = useState('SumBalance');\n    const [columns, setColumns] = useState(columns_balance);\n    const data_reducer = useSelector(state => state.data_reducer);\n    const [data_source, setDataSource] = useState(Immutable.asMutable(data_reducer.sum_balance_data, { deep: true }));\n    /* #endregion */\n\n    const handleChangFile = (val) => {\n        setFile(val)\n        if (val === 'SumBalance') {\n            setColumns(columns_balance)\n            setDataSource(Immutable.asMutable(data_reducer.sum_balance_data, { deep: true }));\n        } else if (val === 'Export_import_partner_year') {\n            setColumns(columns_partner)\n            setDataSource(Immutable.asMutable(data_reducer.partner_year_data, { deep: true }))\n        } else if (val === 'Percent') {\n            setColumns(columns_percent)\n            setDataSource(Immutable.asMutable(data_reducer.percent_product_data, { deep: true }))\n        }\n    }\n\n    return (\n        <Background>\n            <Row gutter={[16, 16]}>\n                <Col xs={24}>\n                    <Text strong>File</Text>\n                    <br />\n                    <Select\n                        showSearch\n                        style={{ width: 250 }}\n                        placeholder=\"Choose file\"\n                        optionFilterProp=\"children\"\n                        onChange={handleChangFile}\n                        value={file}\n                        filterOption={(input, option) =>\n                            option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                        }\n                    >\n                        <Option value='SumBalance'>SumBalance.csv</Option>\n                        <Option value='Export_import_partner_year'>Export_import_partner_year.csv</Option>\n                        <Option value='Percent'>Percent.csv</Option>\n                    </Select>\n                </Col>\n                <Col xs={24}>\n                    <Table columns={columns} dataSource={data_source} rowKey={'STT'} />\n                </Col>\n            </Row>\n        </Background>\n    )\n}","import React from 'react';\nimport {\n    AreaChart, Area, XAxis, YAxis, CartesianGrid, Tooltip,\n} from 'recharts';\nimport { Typography } from 'antd';\nconst { Text } = Typography;\n\nexport default (props) => {\n    const { show_export, show_import, show_balance, is_group, data } = props;\n\n    return (\n        <>\n            {\n                is_group ? <AreaChart\n                    width={900}\n                    height={600}\n                    data={data}\n                    margin={{\n                        top: 10, right: 30, left: 60, bottom: 0,\n                    }}\n                >\n                    <CartesianGrid strokeDasharray=\"3 3\" />\n                    <XAxis dataKey=\"year\" />\n                    <YAxis />\n                    <Tooltip />\n                    {show_export && <Area type=\"monotone\" dataKey=\"Tong_Export\" stackId=\"1\" name='Export' stroke=\"#DB5054\" fill=\"#DB5054\" />}\n                    {show_import && <Area type=\"monotone\" dataKey=\"Tong_Import\" stackId=\"1\" name='Import' stroke=\"#3D7DBC\" fill=\"#3D7DBC\" />}\n                    {show_balance && <Area type=\"monotone\" dataKey=\"Balance\" stackId=\"1\" name='Balance' stroke=\"#C0C934\" fill=\"#C0C934\" />}\n                </AreaChart> :\n                    <div>\n                        {\n                            show_export &&\n                            <>\n                                <Text strong>Export</Text>\n                                <AreaChart\n                                    width={800}\n                                    height={200}\n                                    data={data}\n                                    syncId=\"syncId\"\n                                    margin={{\n                                        top: 10, right: 30, left: 60, bottom: 0,\n                                    }}\n                                >\n                                    <CartesianGrid strokeDasharray=\"3 3\" />\n                                    <XAxis dataKey=\"year\" />\n                                    <YAxis />\n                                    <Tooltip />\n                                    <Area type=\"monotone\" dataKey=\"Tong_Export\" name='Export' stroke=\"#DB5054\" fill=\"#DB5054\" />\n                                </AreaChart>\n                            </>\n                        }\n                        {\n                            show_import &&\n                            <>\n                                <Text strong>Import</Text>\n                                <AreaChart\n                                    width={800}\n                                    height={200}\n                                    data={data}\n                                    syncId=\"syncId\"\n                                    margin={{\n                                        top: 10, right: 30, left: 60, bottom: 0,\n                                    }}\n                                >\n                                    <CartesianGrid strokeDasharray=\"3 3\" />\n                                    <XAxis dataKey=\"year\" />\n                                    <YAxis />\n                                    <Tooltip />\n                                    <Area type=\"monotone\" dataKey=\"Tong_Import\" name='Import' stroke=\"#3D7DBC\" fill=\"#3D7DBC\" />\n                                </AreaChart>\n                            </>\n                        }\n                        {\n                            show_balance &&\n                            <>\n                                <Text strong>Balance</Text>\n                                <AreaChart\n                                    width={800}\n                                    height={200}\n                                    data={data}\n                                    syncId=\"syncId\"\n                                    margin={{\n                                        top: 10, right: 30, left: 60, bottom: 0,\n                                    }}\n                                >\n                                    <CartesianGrid strokeDasharray=\"3 3\" />\n                                    <XAxis dataKey=\"year\" />\n                                    <YAxis />\n                                    <Tooltip />\n                                    <Area type=\"monotone\" dataKey=\"Balance\" name='Balance' stroke=\"#C0C934\" fill=\"#C0C934\" />\n                                </AreaChart>\n                            </>\n                        }\n                    </div>\n            }\n        </>\n    )\n}","import React from 'react';\nimport {\n    LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend,\n} from 'recharts';\nimport { Typography } from 'antd';\nconst { Text } = Typography;\n\nexport default (props) => {\n    const { show_export, show_import, show_balance, is_group, data } = props;\n\n    return (\n        <>\n            {\n                is_group ?\n                    <LineChart\n                        width={900}\n                        height={600}\n                        data={data}\n                        margin={{\n                            top: 10, right: 30, left: 60, bottom: 0,\n                        }}\n                    >\n                        <CartesianGrid strokeDasharray=\"3 3\" />\n                        <XAxis dataKey=\"year\" />\n                        <YAxis />\n                        <Tooltip />\n                        <Legend />\n                        {show_export && <Line type=\"monotone\" dataKey=\"Tong_Export\" name='Export' stroke=\"#E99699\" />}\n                        {show_import && <Line type=\"monotone\" dataKey=\"Tong_Import\" name='Import' stroke=\"#8BB1D7\" />}\n                        {show_balance && <Line type=\"monotone\" dataKey=\"Balance\" name='Balance' stroke=\"#D9DF85\" />}\n                    </LineChart>\n                    :\n                    <div>\n                        {\n                            show_export &&\n                            <>\n                                <Text strong>Export</Text>\n                                <LineChart\n                                    width={800}\n                                    height={200}\n                                    data={data}\n                                    syncId=\"syncId\"\n                                    margin={{\n                                        top: 10, right: 30, left: 60, bottom: 0,\n                                    }}\n                                >\n                                    <CartesianGrid strokeDasharray=\"3 3\" />\n                                    <XAxis dataKey=\"year\" />\n                                    <YAxis />\n                                    <Tooltip />\n                                    <Line type=\"monotone\" dataKey=\"Tong_Export\" name='Export' stroke=\"#E99699\" fill=\"#E99699\" />\n                                </LineChart>\n                            </>\n                        }\n                        {\n                            show_import &&\n                            <>\n                                <Text strong>Import</Text>\n                                <LineChart\n                                    width={800}\n                                    height={200}\n                                    data={data}\n                                    syncId=\"syncId\"\n                                    margin={{\n                                        top: 10, right: 30, left: 60, bottom: 0,\n                                    }}\n                                >\n                                    <CartesianGrid strokeDasharray=\"3 3\" />\n                                    <XAxis dataKey=\"year\" />\n                                    <YAxis />\n                                    <Tooltip />\n                                    <Line type=\"monotone\" dataKey=\"Tong_Import\" name=\"Import\" stroke=\"#8BB1D7\" fill=\"#8BB1D7\" />\n                                </LineChart>\n                            </>\n                        }\n                        {\n                            show_balance &&\n                            <>\n                                <Text strong>Balance</Text>\n                                <LineChart\n                                    width={800}\n                                    height={200}\n                                    data={data}\n                                    syncId=\"syncId\"\n                                    margin={{\n                                        top: 10, right: 30, left: 60, bottom: 0,\n                                    }}\n                                >\n                                    <CartesianGrid strokeDasharray=\"3 3\" />\n                                    <XAxis dataKey=\"year\" />\n                                    <YAxis />\n                                    <Tooltip />\n                                    <Line type=\"monotone\" dataKey=\"Balance\" name=\"Balance\" stroke=\"#D9DF85\" fill=\"#D9DF85\" />\n                                </LineChart>\n                            </>\n                        }\n                    </div>\n            }\n        </>\n    )\n}","import React, { useState, } from 'react';\n//redux\nimport { useSelector } from 'react-redux';\n//component\nimport Background from '../components/Background';\nimport StackedAreaChart from '../components/StackedAreaChart';\nimport LineChart from '../components/LineChart';\nimport SelectCountry from '../components/SelectCountry';\n//antd\nimport { Row, Col, Select, Typography, Button, Checkbox, Radio, message } from 'antd';\nconst { Option } = Select;\nconst { Text } = Typography;\n\n/* #region  init select year option */\nconst createYear = (start, end) => {\n    let select = [];\n    for (let i = start; i > end; i--) {\n        const val = i.toString();\n        select.push(\n            <Option value={val} key={val}>{val}</Option>\n        )\n    }\n    return select;\n}\n/* #endregion */\n\n/* #region  message */\nconst success = () => {\n    message.success('Lấy dữ liệu thành công', 2);\n};\n\nconst warning = () => {\n    message.warning('Chưa có dữ liệu cho quốc gia này', 2);\n};\n/* #endregion */\n\n/* #region  radio style */\nconst radioStyle = {\n    display: 'block',\n    height: '30px',\n    lineHeight: '30px',\n}\n/* #endregion */\n\nexport default () => {\n    /* #region  init */\n    const [country_code_iso2, setCountryCodeIso2] = useState(undefined);\n    const [from_year, setFromYear] = useState(undefined);\n    const [to_year, setToYear] = useState(undefined);\n    const [area_data, setAreaData] = useState([]);\n    const [view_type, setViewType] = useState('Line');\n    const [is_group, setIsGroup] = useState(false);\n    const [show_import, setShowImport] = useState(true);\n    const [show_export, setShowExport] = useState(true);\n    const [show_balance, setShowBalance] = useState(false);\n    const data_reducer = useSelector(state => state.data_reducer);\n    const sum_balance_data = data_reducer.sum_balance_data;\n    /* #endregion */\n\n    /* #endregion csv */\n\n    /* #region  process data */\n    const processData = () => {\n        const filter_data = sum_balance_data.filter(item => (item.country_code_iso2 === country_code_iso2 && item.year >= from_year && item.year <= to_year));\n        if (filter_data.length === 0) {\n            warning();\n        } else {\n            success();\n            setAreaData(filter_data);\n        }\n    }\n\n    /* #endregion */\n\n    return (\n        <Background key='AreaChart'>\n            <Row gutter={[16, 16]}>\n                {/*start render map */}\n                <Col xs={18}>\n                    {view_type === 'Area' &&\n                        <StackedAreaChart\n                            is_group={is_group}\n                            show_export={show_export}\n                            show_import={show_import}\n                            show_balance={show_balance}\n                            data={area_data}\n                        />}\n                    {view_type === 'Line' &&\n                        <LineChart\n                            is_group={is_group}\n                            show_export={show_export}\n                            show_import={show_import}\n                            show_balance={show_balance}\n                            data={area_data}\n                        />}\n                </Col>\n                {/* end render map */}\n                {/* start render select */}\n                <Col xs={6}>\n                    <Row gutter={[16, 16]} >\n                        <Col xs={24}>\n                            <Text strong>Country</Text>\n                            <br />\n                            <SelectCountry setCountryCodeIso2={setCountryCodeIso2} country_code_iso2={country_code_iso2} />\n                        </Col>\n                        <Col xs={12}>\n                            <Text strong>From year</Text>\n                            <br />\n                            <Select\n                                showSearch\n                                style={{ width: '100%' }}\n                                placeholder=\"Choose year\"\n                                optionFilterProp=\"children\"\n                                onChange={val => setFromYear(val)}\n                                value={from_year}\n                                filterOption={(input, option) =>\n                                    option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                                }\n                            >\n                                {createYear(2017, 1961)}\n                            </Select>\n                        </Col>\n                        <Col xs={12}>\n                            <Text strong>To year</Text>\n                            <br />\n                            <Select\n                                showSearch\n                                style={{ width: '100%' }}\n                                placeholder=\"Choose year\"\n                                optionFilterProp=\"children\"\n                                onChange={val => setToYear(val)}\n                                value={to_year}\n                                filterOption={(input, option) =>\n                                    option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                                }\n                            >\n                                {createYear(2017, 1961)}\n                            </Select>\n                        </Col>\n                        <Col xs={24}>\n                            <Text strong>Display config</Text>\n                        </Col>\n                        <Col xs={24}>\n                            <Radio.Group value={view_type} onChange={e => setViewType(e.target.value)}>\n                                <Radio style={radioStyle} value={'Line'}>Line Chart</Radio>\n                                <Radio style={radioStyle} value={'Area'}>Area Chart</Radio>\n                            </Radio.Group>\n                        </Col>\n                        <Col xs={24}>\n                            <Checkbox checked={is_group} onChange={e => setIsGroup(e.target.checked)}>\n                                <Text>Group</Text>\n                            </Checkbox>\n                        </Col>\n                        <Col xs={24} style={{ display: 'flex' }}>\n                            <Checkbox checked={show_export} onChange={e => setShowExport(e.target.checked)}>Export</Checkbox>\n                            <div style={{ height: 20, width: 50, backgroundColor: '#E99699', marginLeft: 8 }} />\n                        </Col>\n                        <Col xs={24} style={{ display: 'flex' }}>\n                            <Checkbox checked={show_import} onChange={e => setShowImport(e.target.checked)}>Import</Checkbox>\n                            <div style={{ height: 20, width: 50, backgroundColor: '#8BB1D7', marginLeft: 8 }} />\n                        </Col>\n                        <Col xs={24} style={{ display: 'flex' }}>\n                            <Checkbox checked={show_balance} onChange={e => setShowBalance(e.target.checked)}>Balance</Checkbox>\n                            <div style={{ height: 20, width: 50, backgroundColor: '#D9DF85' }} />\n                        </Col>\n                        <Col xs={24}>\n                            <Button type='primary' onClick={processData}>Apply</Button>\n                        </Col>\n                    </Row>\n                </Col>\n                {/* end render select */}\n            </Row>\n        </Background>\n    )\n}\n","export default {\n    1: {\n        color: '#5B3145',\n        name: 'Beverages and tobacco'\n    },\n    2: {\n        color: '#01743B',\n        name: 'Crude materials, inedible, except fuels'\n    },\n    3: {\n        color: '#3E47DA',\n        name: 'Mine ral fuels, lubricants and related materials'\n    },\n    4: {\n        color: '#AF7E36',\n        name: 'Animal and vegetable oils, fats and waxes'\n    },\n    5: {\n        color: '#9562D8',\n        name: 'Chemicals and related products, n.e.s.'\n    },\n    6: {\n        color: '#ffcc99',\n        name: 'Manufactured goods classified chiefly by material'\n    },\n    7: {\n        color: '#7B6342',\n        name: 'Machinery and transport equipment'\n    },\n    8: {\n        color: '#635459',\n        name: 'Miscellaneous manufactured articles'\n    },\n    9: {\n        color: '#32878C',\n        name: 'Commodities and transactions not classified elsewhere in the SITC'\n    }\n}","import React from 'react';\nimport { ResponsiveTreeMap } from '@nivo/treemap';\n//utils\nimport { numberWithCommas } from '../utils/number-utils';\n//lib\nimport _ from 'lodash';\n\nexport default ({ data }) => {\n    return (\n        <div style={{ height: 1000, width: 800 }}>\n            <ResponsiveTreeMap\n                root={data.root}\n                identity=\"id\"\n                value=\"percent\"\n                innerPadding={1}\n                outerPadding={1}\n                margin={{ top: 10, right: 10, bottom: 10, left: 10 }}\n                label={(data) => `${data.name}: ${data.percent}%`}\n                tooltip={({ data }) => {\n                    const { name, percent, sum, color } = data;\n                    return (\n                        <>\n                            <strong style={{ color }}>\n                                Product code: {name}\n                            </strong>\n                            {\n                                _.isNumber(sum) &&\n                                <>\n                                    <br />\n                                    <strong style={{ color }}>\n                                        {numberWithCommas(sum)}\n                                    </strong>\n                                </>\n                            }\n                            <br />\n                            <strong style={{ color }}>\n                                {percent}%\n                            </strong>\n                        </>\n                    )\n                }}\n                labelSkipSize={12}\n                // labelFormat=\".0s\"\n                // labelTextColor={{ from: 'color', modifiers: [['darker', 1.2]] }}\n                labelTextColor={'#ffffff'}\n                colors={(data) => data.color || '#b1646a'}\n                borderWidth={1}\n                borderColor=\"#ffffff\"\n                animate={true}\n                motionStiffness={90}\n                motionDamping={11}\n                leavesOnly={false}\n            />\n        </div>\n    )\n}","import React, { useState, } from 'react';\n//redux\nimport { useSelector } from 'react-redux';\n//constants\nimport base_colors from '../constants/colors';\n//lib\nimport _ from 'lodash';\nimport { generatorId } from '../utils/number-utils';\n//components\nimport Background from '../components/Background';\nimport TreepMap from '../components/TreeMap';\nimport SelectCountry from '../components/SelectCountry';\n//antd\nimport { Row, Col, Select, Typography, Button, Radio, message } from 'antd';\nconst { Option } = Select;\nconst { Text } = Typography;\n\n/* #region  init select year option */\nconst createYear = (start, end) => {\n    let select = [];\n    for (let i = start; i > end; i--) {\n        const val = i;\n        select.push(\n            <Option value={val} key={val}>{val}</Option>\n        )\n    }\n    return select;\n}\n/* #endregion */\n\n\n/* #region  message */\nconst success = () => {\n    message.success('Lấy dữ liệu thành công', 2);\n};\n\nconst warning = () => {\n    message.warning('Chưa có dữ liệu cho quốc gia này', 2);\n};\n/* #endregion */\n\n/* #region  radio style */\nconst radioStyle = {\n    display: 'block',\n    height: '30px',\n    lineHeight: '30px',\n}\n/* #endregion */\n\n\nexport default () => {\n\n    /* #region  init */\n    const [country_code_iso2, setCountryCodeIso2] = useState(undefined);\n    const [year, setYear] = useState(undefined);\n    const [view_type, setViewType] = useState('Import');\n    const [data_tree, setDataTree] = useState(undefined);\n    const data_reducer = useSelector(state => state.data_reducer);\n    const percent_product_data = data_reducer.percent_product_data;\n    /* #endregion */\n\n    /* #region  processData */\n    const processData = () => {\n        const filter_data_by_coutry_year = percent_product_data.filter(item => (item.country_code_iso2 === country_code_iso2 && item.year === year))\n        if (filter_data_by_coutry_year.length === 0) {\n            warning();\n        }\n        else {\n            let group_by_session_code = {};\n            filter_data_by_coutry_year.forEach(ele => {\n                const { Session_code, product_id, PercentIm, PercentEx, SumExport, SumImport } = ele;\n                let item = {\n                    id: generatorId(),\n                    name: Session_code.toString() + product_id.toString(),\n                    percent: view_type === 'Import' ? PercentIm : PercentEx,\n                    sum: view_type === 'Import' ? SumImport : SumExport,\n                    color: _.isEmpty(base_colors[Session_code]) ? '#cc3300' : base_colors[Session_code].color\n                }\n                if (_.isEmpty(group_by_session_code[Session_code])) {\n                    group_by_session_code[Session_code] = [item];\n                } else {\n                    group_by_session_code[Session_code].push(item);\n                }\n            })\n            let children_root = [];\n            Object.values(group_by_session_code).map((item, key) => {\n                children_root = [...children_root, {\n                    name: key.toString(),\n                    id: generatorId(),\n                    children: item\n                }]\n                return {}\n            })\n            const data_tree_map = {\n                root: {\n                    name: 'tree map',\n                    children: children_root\n                }\n            }\n            success();\n            setDataTree(data_tree_map);\n        }\n    }\n    /* #endregion */\n\n    return (\n        <Background>\n            <Row gutter={[16, 16]}>\n                <Col xs={18}>\n                    {\n                        !_.isEmpty(data_tree) &&\n                        <TreepMap data={data_tree} />\n                    }\n                </Col>\n                <Col xs={6}>\n                    <Row gutter={[16, 16]}>\n                        <Col xs={24}>\n                            <Text strong>Country</Text>\n                            <br />\n                            <SelectCountry setCountryCodeIso2={setCountryCodeIso2} country_code_iso2={country_code_iso2} />\n                        </Col>\n                        <Col xs={24}>\n                            <Text strong>Year</Text>\n                            <br />\n                            <Select\n                                showSearch\n                                style={{ width: '100%' }}\n                                placeholder=\"Choose year\"\n                                optionFilterProp=\"children\"\n                                onChange={val => setYear(val)}\n                                value={year}\n                                filterOption={(input, option) =>\n                                    option.props.children.toString().toLowerCase().indexOf(input.toString().toLowerCase()) >= 0\n                                }\n                            >\n                                {createYear(2017, 1961)}\n                            </Select>\n                        </Col>\n                        <Col xs={24}>\n                            <Radio.Group value={view_type} onChange={e => setViewType(e.target.value)}>\n                                <Radio style={radioStyle} value={'Export'}>Export</Radio>\n                                <Radio style={radioStyle} value={'Import'}>Import</Radio>\n                            </Radio.Group>\n                        </Col>\n                        <Col xs={24}>\n                            <Button type='primary' onClick={processData}>Apply</Button>\n                        </Col>\n                        {\n                            Object.values(base_colors).map((item, key) => {\n                                return (\n                                    <Col key={key} xs={24} style={{ display: 'flex' }}>\n                                        <div style={{ height: 20, minWidth: 50, maxWidth: 50, backgroundColor: item.color, marginRight: 8 }} />\n                                        <Text>{`${key + 1}. ${item.name}`}</Text>\n                                    </Col>\n                                )\n                            })\n                        }\n\n                    </Row>\n                </Col>\n            </Row>\n        </Background>\n    )\n}","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nimport { Container, Heading } from 'styled-minimal';\nimport Background from '../components/Background';\n\nconst StyledContainer = styled(Container)`\n  align-items: center;\n  text-align: center;\n\n  h1,\n  a {\n    color: #fff;\n    line-height: 1;\n  }\n\n  a {\n    text-decoration: underline;\n  }\n`;\n\nconst NotFound = () => (\n    <Background key=\"404\">\n        <StyledContainer layout=\"fullScreen\" verticalPadding>\n            <Heading fontSize={100}>404</Heading>\n            <Link to=\"/\">\n                <Heading as=\"h2\">Not Found</Heading>\n            </Link>\n        </StyledContainer>\n    </Background>\n);\n\nexport default NotFound;\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport { Container } from 'styled-minimal';\n\nimport { Spin, Typography } from 'antd';\n\nconst StyledContainer = styled(Container)`\n  align-items: center;\n  text-align: center;\n\n  h1,\n  a {\n    color: #fff;\n    line-height: 1;\n  }\n\n  a {\n    text-decoration: underline;\n  }\n`;\n\nconst { Text } = Typography;\n\nconst Splash = () => (\n  <StyledContainer layout=\"fullScreen\" verticalPadding>\n    <Spin size=\"large\" />\n    <Text style={{color: '#2195FF'}}>Loading....</Text>\n  </StyledContainer>\n);\n\nexport default Splash;\n","/**\n * Configuration\n * @module config\n */\n\nconst config = {\n    name: 'Data visualization',\n    description: 'data-visualization with react antd',\n  };\n  \n  export default config;\n  ","import React, { useEffect, useState } from 'react';\n//router\nimport { Router, Switch, Route } from 'react-router-dom';\nimport history from './utils/history';\n//redux\nimport { useDispatch } from 'react-redux';\nimport { Creators as DataActions } from './actions/data-action';\n//\nimport { Helmet } from 'react-helmet-async';\nimport styled from 'styled-components';\n\nimport RoutePublic from './components/RoutePublic';\n\nimport Home from './routes/Home';\nimport DataList from './routes/DataList';\nimport AreaChart from './routes/AreaChart';\nimport TreeMap from './routes/TreeMap';\nimport NotFound from './routes/NotFound';\nimport Splash from './routes/Splash';\n\nimport config from './config';\n\n//data\nimport SumBalance from './data/SumBalance.csv';\nimport PartnerYear from './data/Export_import_partner_year.csv';\nimport Percent_Product from './data/Percent.csv';\n//lib\nimport { countries } from 'country-data';\nimport _ from 'lodash';\nimport getCountryISO2 from 'country-iso-3-to-2';\nconst Main = styled.main`\n  min-height: 100vh;\n`;\n\nconst MyRouter = () => {\n\treturn (\n\t\t<Router history={history}>\n\t\t\t<Helmet\n\t\t\t\tdefer={false}\n\t\t\t\thtmlAttributes={{ lang: 'pt-br' }}\n\t\t\t\tencodeSpecialCharacters={true}\n\t\t\t\tdefaultTitle={config.name}\n\t\t\t\ttitleTemplate={`%s | ${config.name}`}\n\t\t\t\ttitleAttributes={{ itemprop: 'name', lang: 'pt-br' }}\n\t\t\t/>\n\t\t\t<Main isAuthenticated={false}>\n\t\t\t\t<Switch>\n\t\t\t\t\t<RoutePublic\n\t\t\t\t\t\tisAuthenticated={false}\n\t\t\t\t\t\tpath=\"/\"\n\t\t\t\t\t\texact\n\t\t\t\t\t\tcomponent={DataList}\n\t\t\t\t\t/>\n\t\t\t\t\t<RoutePublic\n\t\t\t\t\t\tisAuthenticated={false}\n\t\t\t\t\t\tpath=\"/data\"\n\t\t\t\t\t\texact\n\t\t\t\t\t\tcomponent={DataList}\n\t\t\t\t\t/>\n\t\t\t\t\t<RoutePublic\n\t\t\t\t\t\tisAuthenticated={false}\n\t\t\t\t\t\tpath=\"/map\"\n\t\t\t\t\t\texact\n\t\t\t\t\t\tcomponent={Home}\n\t\t\t\t\t/>\n\t\t\t\t\t<RoutePublic\n\t\t\t\t\t\tisAuthenticated={false}\n\t\t\t\t\t\tpath=\"/area-chart\"\n\t\t\t\t\t\tcomponent={AreaChart}\n\t\t\t\t\t/>\n\t\t\t\t\t<RoutePublic\n\t\t\t\t\t\tisAuthenticated={false}\n\t\t\t\t\t\tpath=\"/tree-map\"\n\t\t\t\t\t\tcomponent={TreeMap}\n\t\t\t\t\t/>\n\t\t\t\t\t<Route component={NotFound} />\n\t\t\t\t</Switch>\n\t\t\t</Main>\n\t\t</Router>\n\t);\n}\n\nconst App = () => {\n\t/* #region  props redux store */\n\tconst dispatch = useDispatch();\n\tconst [balance_ready, setBalanceReady] = useState(false);\n\tconst [partner_ready, setPartnerReady] = useState(false);\n\tconst [percent_ready, setPercentReady] = useState(false);\n\t/* #endregion */\n\n\tconst loadSumBalance = () => {\n\t\tif (window.Worker) {\n\t\t\tconst wk = new Worker('worker.js');\n\t\t\twk.addEventListener('message', event => {\n\t\t\t\tconst data = event.data.map((item, index) => {\n\t\t\t\t\tconst { location_code, Tong_Export, Tong_Import, Balance, year } = item;\n\t\t\t\t\titem.key = index;\n\t\t\t\t\titem.location_name = _.isEmpty(countries[location_code]) ? 'Không xác định' : countries[location_code].name;\n\t\t\t\t\titem.country_code_iso2 = getCountryISO2(location_code);\n\t\t\t\t\titem.country_code_iso3 = location_code;\n\t\t\t\t\titem.Tong_Export = Number(Tong_Export);\n\t\t\t\t\titem.Tong_Import = Number(Tong_Import);\n\t\t\t\t\titem.Balance = Number(Balance);\n\t\t\t\t\titem.year = Number(year);\n\t\t\t\t\treturn item;\n\t\t\t\t})\n\t\t\t\tdispatch(DataActions.setSumBalanceData({ data }));\n\t\t\t\tsetBalanceReady(true);\n\t\t\t});\n\t\t\twk.postMessage({ file: SumBalance })\n\t\t}\n\t}\n\n\tconst loadPartnerYear = () => {\n\t\tif (window.Worker) {\n\t\t\tconst wk = new Worker('worker.js');\n\t\t\twk.addEventListener('message', event => {\n\t\t\t\tconst data = event.data.map((item, index) => {\n\t\t\t\t\tconst { location_code, partner_code, Tong_Export, Tong_Import, year } = item;\n\t\t\t\t\titem.key = index;\n\t\t\t\t\titem.location_name = _.isEmpty(countries[location_code]) ? 'Không xác định' : countries[location_code].name;\n\t\t\t\t\titem.country_code_iso2 = getCountryISO2(location_code);\n\t\t\t\t\titem.country_code_iso3 = location_code;\n\t\t\t\t\titem.partner_code_ios2 = getCountryISO2(partner_code);\n\t\t\t\t\titem.partner_code_iso3 = partner_code;\n\t\t\t\t\titem.Tong_Export = Number(Tong_Export);\n\t\t\t\t\titem.Tong_Import = Number(Tong_Import);\n\t\t\t\t\titem.year = Number(year);\n\t\t\t\t\treturn item;\n\t\t\t\t})\n\t\t\t\tdispatch(DataActions.setPartnerYearData({ data }));\n\t\t\t\tsetPartnerReady(true);\n\t\t\t});\n\t\t\twk.postMessage({ file: PartnerYear })\n\t\t}\n\t}\n\n\tconst loadPercentProduct = () => {\n\t\tif (window.Worker) {\n\t\t\tconst wk = new Worker('worker.js');\n\t\t\twk.addEventListener('message', event => {\n\t\t\t\tconst data = event.data.map((item, index) => {\n\t\t\t\t\tconst { year, location_code, Session_code, Session_name, product_id, SumImport, PercentIm, SumExport, PercentEx, Percent_Session_Im, Percent_Session_Ex } = item;\n\t\t\t\t\titem.key = index;\n\t\t\t\t\titem.location_name = _.isEmpty(countries[location_code]) ? 'Không xác định' : countries[location_code].name;\n\t\t\t\t\titem.country_code_iso2 = getCountryISO2(location_code);\n\t\t\t\t\titem.country_code_iso3 = location_code;\n\t\t\t\t\titem.SumExport = Number(SumExport);\n\t\t\t\t\titem.SumImport = Number(SumImport);\n\t\t\t\t\titem.PercentIm = Number(PercentIm);\n\t\t\t\t\titem.PercentEx = Number(PercentEx);\n\t\t\t\t\titem.Percent_Session_Im = Number(Percent_Session_Im);\n\t\t\t\t\titem.Percent_Session_Ex = Number(Percent_Session_Ex);\n\t\t\t\t\titem.Session_name = Session_name;\n\t\t\t\t\titem.product_id = product_id;\n\t\t\t\t\titem.Session_code = Number(Session_code);\n\t\t\t\t\titem.year = Number(year);\n\t\t\t\t\treturn item;\n\t\t\t\t})\n\t\t\t\tdispatch(DataActions.setPercentProductData({ data }));\n\t\t\t\tsetPercentReady(true);\n\t\t\t});\n\t\t\twk.postMessage({ file: Percent_Product })\n\t\t}\n\t}\n\n\tuseEffect(() => {\n\t\t!balance_ready && loadSumBalance();\n\t\t!partner_ready && loadPartnerYear();\n\t\t!percent_ready && loadPercentProduct();\n\t\treturn () => { }\n\t}, [])\n\n\treturn (\n\t\tbalance_ready && partner_ready && percent_ready ? <MyRouter /> : <Splash />\n\t)\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/lib/integration/react';\nimport { HelmetProvider } from 'react-helmet-async';\n\nimport { store, persistor } from './store';\nimport * as serviceWorker from './serviceWorker';\n\nimport App from './App';\nimport 'antd/dist/antd.css';\nimport './index.css';\n\nReactDOM.render(\n    <Provider store={store}>\n        <PersistGate loading={<div />} persistor={persistor}>\n            <HelmetProvider>\n                <App />\n            </HelmetProvider>\n        </PersistGate>\n    </Provider>,\n    document.getElementById('root'),\n);\n\nserviceWorker.register();","//lib\nimport { createReducer } from 'reduxsauce';\nimport Immutable from 'immutable';\n\n//action types\nimport { Types } from '../actions/data-action';\n\n//handler\nimport * as Handler from '../handlers/data-handler';\n\nconst INITIAL_STATE = Immutable.fromJS({\n    sum_balance_data: [],\n    partner_year_data: [],\n    percent_product_data: [],\n})\n\nexport const reducer = createReducer(INITIAL_STATE, {\n    [Types.SET_SUM_BALANCE_DATA]: Handler.setSumBalanceData,\n    [Types.SET_PARTNER_YEAR_DATA]: Handler.setPartnerYearData,\n    [Types.SET_PERCENT_PRODUCT_DATA]: Handler.setPercentProductData,\n})\n\n","// import _ from 'lodash';\nimport Immutable from 'seamless-immutable';\n\nexport const setSumBalanceData = (state, { params }) => {\n    console.log(\"TCL: setSumBalanceData -> params\", params)\n    return Immutable.merge(state, {\n        sum_balance_data: params.data,\n    })\n}\n\nexport const setPartnerYearData = (state, { params }) => {\n    console.log(\"TCL: setPartnerYearData -> params\", params)\n    return Immutable.merge(state, {\n        partner_year_data: params.data,\n    })\n}\n\nexport const setPercentProductData = (state, { params }) => {\n    console.log(\"TCL: setPercentProductData -> params\", params)\n    return Immutable.merge(state, {\n        percent_product_data: params.data,\n    })\n}"],"sourceRoot":""}